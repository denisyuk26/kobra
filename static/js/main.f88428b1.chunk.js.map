{"version":3,"sources":["Components/Header/header.module.css","Components/Home/home.module.css","Components/Snake/infotable.module.css","Components/Snake/style.module.css","index.module.css","Components/Snake/reactkobra.module.css","serviceWorker.js","Components/Header/MenuItems.js","Components/Header/index.js","Components/Footer/index.js","Components/Home/index.js","Components/Snake/ReactKobra.js","Components/Snake/InfoTable.js","Components/Snake/index.js","index.js"],"names":["module","exports","app_header","menu_item","greeting","info_container","score_wrap","high_score_wrap","time_wrap","boost_container","apples_container","speed_container","speed_name","info_value","high_score","score","time","boost","available","not_available","apple","space","speed","snake_app_container","template","snake","grid","start","startAgain","modal","cell","head","body","move_rigth","move_left","move_down","move_up","move_body_right","move_body_left","move_body_down","move_body_up","Boolean","window","location","hostname","match","MenuItems","item","map","index","react_default","a","createElement","key","className","styles","Link","to","concat","Header","Component","Footer","Greeting","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initGreeting","txt","split","greetingTimer","setInterval","setState","prevState","mount","showLetters","shift","componentDidMount","componentWillUnmount","clearInterval","state","_this$state","id","greet","Text_show","ReactKobra","setSpeed","updateSpeed","appleEat","boostKeyIsPressed","initBoostSpeed","event","_this$props","updateBoostStatus","gameOver","boostInterval","timeBoost","updateBoostTime","boostTimeout","setTimeout","boostCount","updateBoostCount","startGame","updateStartStatus","_ref","eat","nextState","objectSpread","row","direction","y","col","x","toConsumableArray","Math","floor","random","pop","isSnakeBody","setGameOver","setMaxScore","length","gameTimeOut","moveSnakeHead","move_right","moveSnakeBody","setDirection","e","_ref2","_ref3","_ref4","_ref5","baseSpeed","_ref6","isApple","updateScore","isSnakeHead","find","inBody","createGridForSnake","showModalWindow","onClick","Array","keys","_","_this2","document","addEventListener","prevProps","_this$state2","gameStarted","_this3","removeEventListener","clearTimeout","tabIndex","onKeyPress","console","log","InfoTable","target","options","difficulty","label","optionsWithSpeed","name","value","updateBaseSpeed","renderSpeedOptions","disabled","onChange","updateApplesForBoost","arguments","undefined","fill","i","ind","showButtons","maxScore","Snake","bool","prevScore","count","boostTime","InfoTable_InfoTable","ReactKobra_ReactKobra","ReactDOM","render","HashRouter","basename","process","Components_Header","Switch","Route","exact","path","component","Home","Footer_Footer","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f88428b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_header\":\"header_app_header__2aFTa\",\"menu_item\":\"header_menu_item__3kBGU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"home_greeting__3m25k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info_container\":\"infotable_info_container__2eYkx\",\"score_wrap\":\"infotable_score_wrap__1758e\",\"high_score_wrap\":\"infotable_high_score_wrap__Advbt\",\"time_wrap\":\"infotable_time_wrap__BmZR-\",\"boost_container\":\"infotable_boost_container__3GUTv\",\"apples_container\":\"infotable_apples_container__1mUCj\",\"speed_container\":\"infotable_speed_container__2B5fE\",\"speed_name\":\"infotable_speed_name__AMK2K\",\"info_value\":\"infotable_info_value__27jyp\",\"high_score\":\"infotable_high_score__3frP1\",\"score\":\"infotable_score__2hKm0\",\"time\":\"infotable_time__2X-E7\",\"boost\":\"infotable_boost__2ttVR\",\"available\":\"infotable_available__15e36\",\"not_available\":\"infotable_not_available__1DI91\",\"apple\":\"infotable_apple__27dkD\",\"space\":\"infotable_space__iXJmw\",\"speed\":\"infotable_speed___JEV7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snake_app_container\":\"style_snake_app_container__3Bduf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template\":\"src_template__1u8wO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snake\":\"reactkobra_snake__1J3wN\",\"grid\":\"reactkobra_grid__uP3WP\",\"start\":\"reactkobra_start__2U5mj\",\"startAgain\":\"reactkobra_startAgain__2bJ2d\",\"modal\":\"reactkobra_modal__1e0QJ\",\"cell\":\"reactkobra_cell__1u2kJ\",\"head\":\"reactkobra_head__12NRZ\",\"body\":\"reactkobra_body__qB6C5\",\"apple\":\"reactkobra_apple__1qYFX\",\"move_rigth\":\"reactkobra_move_rigth__21TEl\",\"move_left\":\"reactkobra_move_left__LShQn\",\"move_down\":\"reactkobra_move_down__1zivM\",\"move_up\":\"reactkobra_move_up__2Xq7i\",\"move_body_right\":\"reactkobra_move_body_right__3wHzs\",\"move_body_left\":\"reactkobra_move_body_left__22ffK\",\"move_body_down\":\"reactkobra_move_body_down__34uDy\",\"move_body_up\":\"reactkobra_move_body_up__3a5On\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./header.module.css\";\r\n\r\nexport default function MenuItems() {\r\n  const links = [\"home\", \"game\"];\r\n  const item = links.map((item, index) => (\r\n    <li key={index} className={styles.menu_item}>\r\n      <Link to={`${item}`}>{item}</Link>\r\n    </li>\r\n  ));\r\n  return <ul>{item}</ul>;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport MenuItems from \"./MenuItems.js\";\r\nimport styles from \"./header.module.css\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className={styles.app_header}>\r\n          <MenuItems />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./footer.module.css\";\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <footer>&#9400; 2019</footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./home.module.css\";\r\n\r\nexport default class Greeting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showLetters: \"\",\r\n      mount: false\r\n    };\r\n  }\r\n\r\n  initGreeting = () => {\r\n    let txt = `⚛️Hello Visitor!⚛️ Greet to see You!✌️✌️✌️`.split(\"\");\r\n    this.greetingTimer = setInterval(() => {\r\n      if (!txt[0]) return false;\r\n      this.setState(prevState => {\r\n        prevState.mount = true;\r\n        return (prevState.showLetters += txt.shift());\r\n      });\r\n    }, 50);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.initGreeting();\r\n  };\r\n  componentWillUnmount = () => {\r\n    clearInterval(this.greetingTimer);\r\n  };\r\n\r\n  render() {\r\n    const { mount, showLetters } = this.state;\r\n\r\n    return (\r\n      <div id={styles.greet}>\r\n        <div className={styles.greeting}>\r\n          {mount ? <p id={styles.Text_show}>{showLetters}</p> : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport styles from \"./reactkobra.module.css\";\r\n\r\nexport default class ReactKobra extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const grid = [...Array(19).keys()].map((_, row) => {\r\n      return [...Array(19)].map((_, col) => {\r\n        return {\r\n          row: row,\r\n          col: col\r\n        };\r\n      });\r\n    });\r\n    this.state = {\r\n      grid,\r\n      apple: {\r\n        row: Math.floor(Math.random() * 19),\r\n        col: Math.floor(Math.random() * 19)\r\n      },\r\n      snake: {\r\n        head: {\r\n          row: 9,\r\n          col: 9\r\n        },\r\n        direction: {\r\n          x: 1,\r\n          y: 0\r\n        },\r\n        body: []\r\n      },\r\n      startAgain: false,\r\n      boostKeyIsPressed: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", e => {\r\n      this.setDirection(e);\r\n      this.initBoostSpeed(e);\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { snake, apple } = this.state;\r\n    const eat = apple.row === snake.head.row && apple.col === snake.head.col;\r\n    if (prevProps.gameStarted === !this.props.gameStarted) {\r\n      this.startGame();\r\n    }\r\n    //this condition help us to know when snake eat apple, then re-render apple immediately\r\n    if (eat) {\r\n      this.setState({\r\n        snake: {\r\n          ...snake,\r\n          body: [...snake.body, snake.head]\r\n        },\r\n        apple: this.appleEat()\r\n          ? {\r\n              row: Math.floor(Math.random() * 19),\r\n              col: Math.floor(Math.random() * 19)\r\n            }\r\n          : apple\r\n      });\r\n    }\r\n    //update apples count for boost\r\n    if (eat && !this.props.boost && !this.state.boostKeyIsPressed) {\r\n      this.props.updateBoostCount(this.props.boostCount - 1);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", e => {\r\n      this.setDirection(e);\r\n      this.initBoostSpeed(e);\r\n    });\r\n\r\n    clearInterval(this.boostInterval);\r\n    clearTimeout(this.gameTimeOut, this.boostTimeout);\r\n  }\r\n\r\n  /* methods for settings (\r\n\r\n  setSpeed()\r\n   * if snake eat apple, decrease this.props.speed by 20 every time,\r\n   * the smallest speed is 30,\r\n   * if in boost mode snake eat apple,  speed don't change. It always equal to the value    this.props.speed after pressed the 'Space' key\r\n   * return num for setInterval\r\n  initBoostSpeed()\r\n    * if \"Space\" key pressed and the props boost is 1, divided props.speed by 2,\r\n    * after 5000 ms speed change on speed before activated boost\r\n  updateBoostStatus()\r\n    * update props boostCount every time when snake eat apple\r\n    * if props boostCount equal 0, refresh boostCount to default value (3)\r\n  startGame()\r\n    * if props gameOver true do nothing\r\n    * else we have 2 callback in setState,\r\n     ** 1st callback generate new state for snake head, snake body and apple and if snake don't eat apple we delete last element of snake body array, else return new state\r\n     ** 2nd callback check if game is over  or if snake eat self update props for generate gameOver, else run setInterval with methods updateBoostStatus() startGame(), which update every setSpeed()\r\n   setDirection()\r\n    * set state snake.direction depended on key is pressed\r\n    * if direction x or y is 1 and user try to change it to -1 return false\r\n   gameOver()\r\n    * check if snake head coordinates less or bigger than coordinates of col/row grid update props gameOver, start, and check send score for check is it bigger than previous\r\n   startAgain()\r\n    * change setting to default and start game again\r\n  */\r\n\r\n  setSpeed = () => {\r\n    if (this.props.speed < 30) {\r\n      this.props.updateSpeed(30);\r\n    }\r\n    if (this.appleEat()) {\r\n      this.props.updateSpeed(this.props.speed - 20);\r\n      if (this.appleEat() && this.state.boostKeyIsPressed) {\r\n        this.props.updateSpeed(this.props.speed);\r\n      }\r\n    }\r\n    return this.props.speed;\r\n  };\r\n\r\n  initBoostSpeed = event => {\r\n    const { boost, updateBoostStatus } = this.props;\r\n    if (event.key === \" \" && boost && !this.props.gameOver) {\r\n      updateBoostStatus(false);\r\n      const speed = this.props.speed;\r\n      this.props.updateSpeed(this.props.speed / 2);\r\n      this.setState({ boostKeyIsPressed: true });\r\n      this.boostInterval = setInterval(() => {\r\n        let time = this.props.timeBoost;\r\n        if (!this.props.gameOver) this.props.updateBoostTime(time - 1);\r\n      }, 1000);\r\n      this.boostTimeout = setTimeout(() => {\r\n        this.props.updateSpeed(speed);\r\n        this.setState({\r\n          boostKeyIsPressed: false\r\n        });\r\n        clearInterval(this.boostInterval);\r\n      }, 5000);\r\n    }\r\n  };\r\n  updateBoostStatus = () => {\r\n    if (this.props.boostCount === 0) {\r\n      this.props.updateBoostCount(3);\r\n      this.props.updateBoostTime(5);\r\n      return this.props.updateBoostStatus(true);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  startGame = () => {\r\n    if (this.props.gameOver) return;\r\n    this.props.updateStartStatus(true);\r\n    this.setState(\r\n      ({ snake, apple }) => {\r\n        const eat = this.appleEat();\r\n        const nextState = {\r\n          snake: {\r\n            ...snake,\r\n            head: {\r\n              row: snake.head.row + snake.direction.y,\r\n              col: snake.head.col + snake.direction.x\r\n            },\r\n            body: [snake.head, ...snake.body]\r\n          },\r\n          apple: this.appleEat()\r\n            ? {\r\n                row: Math.floor(Math.random() * 19),\r\n                col: Math.floor(Math.random() * 19)\r\n              }\r\n            : apple\r\n        };\r\n        if (!eat) nextState.snake.body.pop();\r\n        return nextState;\r\n      },\r\n      () => {\r\n        const { snake } = this.state;\r\n        if (this.gameOver() || this.isSnakeBody(snake.head)) {\r\n          this.props.updateStartStatus(false);\r\n          this.props.setGameOver(true);\r\n          this.props.setMaxScore(snake.body.length);\r\n          return;\r\n        }\r\n        this.gameTimeOut = setTimeout(() => {\r\n          this.updateBoostStatus();\r\n          this.startGame();\r\n        }, this.setSpeed());\r\n      }\r\n    );\r\n  };\r\n  moveSnakeHead = () => {\r\n    const { snake } = this.state;\r\n    if (snake.direction.y === -1) {\r\n      return styles.move_up;\r\n    } else if (snake.direction.x === 1) {\r\n      return styles.move_right;\r\n    } else if (snake.direction.y === 1) {\r\n      return styles.move_down;\r\n    } else if (snake.direction.x === -1) {\r\n      return styles.move_left;\r\n    }\r\n  };\r\n  moveSnakeBody = () => {\r\n    const { snake } = this.state;\r\n    if (snake.body.length !== 0) {\r\n      if (snake.direction.y === -1 && snake.head.col === snake.body[0].col) {\r\n        return styles.move_body_up;\r\n      } else if (\r\n        snake.direction.x === 1 &&\r\n        snake.head.row === snake.body[0].row\r\n      ) {\r\n        return styles.move_body_right;\r\n      } else if (\r\n        snake.direction.y === 1 &&\r\n        snake.head.col === snake.body[0].col\r\n      ) {\r\n        return styles.move_body_down;\r\n      } else if (\r\n        snake.direction.x === -1 &&\r\n        snake.head.row === snake.body[0].row\r\n      ) {\r\n        return styles.move_body_left;\r\n      }\r\n    }\r\n  };\r\n\r\n  setDirection = e => {\r\n    const { snake } = this.state;\r\n    if (e.key === \"ArrowUp\") {\r\n      if (snake.direction.y === 1) return;\r\n      this.setState(({ snake }) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: 0,\r\n            y: -1\r\n          }\r\n        }\r\n      }));\r\n    } else if (e.key === \"ArrowRight\") {\r\n      if (snake.direction.x === -1) return;\r\n      this.setState(({ snake }) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: 1,\r\n            y: 0\r\n          }\r\n        }\r\n      }));\r\n    } else if (e.key === \"ArrowDown\") {\r\n      if (snake.direction.y === -1) return;\r\n      this.setState(({ snake }) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: 0,\r\n            y: 1\r\n          }\r\n        }\r\n      }));\r\n    } else if (e.key === \"ArrowLeft\") {\r\n      if (snake.direction.x === 1) return;\r\n      this.setState(({ snake }) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: -1,\r\n            y: 0\r\n          }\r\n        }\r\n      }));\r\n    }\r\n  };\r\n\r\n  gameOver = () => {\r\n    const { snake } = this.state;\r\n    if (\r\n      snake.head.col < 0 ||\r\n      snake.head.row < 0 ||\r\n      snake.head.col > 18 ||\r\n      snake.head.row > 18\r\n    ) {\r\n      this.props.setGameOver(true);\r\n      this.props.updateStartStatus(false);\r\n      this.props.setMaxScore(snake.body.length);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  startAgain = e => {\r\n    this.props.updateSpeed(this.props.baseSpeed);\r\n    this.props.updateBoostCount(3);\r\n    this.props.updateBoostStatus(true);\r\n    this.props.setGameOver(false);\r\n    this.props.updateStartStatus(true);\r\n    this.props.updateBoostTime(5);\r\n    this.setState(({ snake, startAgain }) => {\r\n      return {\r\n        startAgain: true,\r\n        snake: {\r\n          head: {\r\n            col: 9,\r\n            row: 9\r\n          },\r\n          body: [],\r\n          direction: {\r\n            x: 1,\r\n            y: 0\r\n          }\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  /* methods for apple (\r\n  getAppleOnField() generate random apple on field,\r\n  isApple() check apple.row and apple.col with grid coordinates,\r\n  appleEat() check apple.row and apple.col with snake.head coordinates)\r\n  */\r\n\r\n  isApple = cell => {\r\n    const { apple } = this.state;\r\n    return cell.row === apple.row && cell.col === apple.col ? styles.apple : \"\";\r\n  };\r\n\r\n  appleEat = () => {\r\n    const { apple, snake } = this.state;\r\n    this.props.updateScore(snake.body.length);\r\n    return apple.row === snake.head.row && apple.col === snake.head.col;\r\n  };\r\n\r\n  /* methods for snake head and snake body (\r\n  isSnakeHead() check snake.head.row and snake.head.col with grid coordinates,\r\n  isSnakeBody() tail is array with obj ({col: value, row: value}) I check if coordinates of snake.body equal with grid coordinates return true ,\r\n  */\r\n\r\n  isSnakeHead = cell => {\r\n    const { snake } = this.state;\r\n    return cell.row === snake.head.row && cell.col === snake.head.col\r\n      ? `${styles.snake}, ${styles.head}`\r\n      : \"\";\r\n  };\r\n\r\n  isSnakeBody = cell => {\r\n    const { snake } = this.state;\r\n    return snake.body.find(\r\n      inBody => inBody.row === cell.row && inBody.col === cell.col\r\n    );\r\n  };\r\n\r\n  createGridForSnake = () => {\r\n    const { grid } = this.state;\r\n    return grid.map(row =>\r\n      row.map(cell => (\r\n        <div\r\n          key={`${cell.row} ${cell.col}`}\r\n          className={`${styles.cell} ${\r\n            this.isSnakeHead(cell)\r\n              ? `${styles.head} ${this.moveSnakeHead()}`\r\n              : this.isApple(cell)\r\n              ? styles.apple\r\n              : this.isSnakeBody(cell)\r\n              ? `${styles.body} ${this.moveSnakeBody()}`\r\n              : \"\"\r\n          }`}\r\n        />\r\n      ))\r\n    );\r\n  };\r\n\r\n  showModalWindow = () => {\r\n    const { startAgain } = this.state;\r\n    return (\r\n      <div className={styles.modal}>\r\n        <button onClick={this.startAgain} id={styles.start}>\r\n          {startAgain ? \"Start Again\" : \"Start game\"}\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id={styles.snake} tabIndex=\"0\" onKeyPress={this.setDirection}>\r\n        <section id={styles.grid}>{this.createGridForSnake()}</section>\r\n        <div>{this.props.gameOver ? this.showModalWindow() : null}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport styles from \"./infotable.module.css\";\r\nconsole.log(styles);\r\nexport default class InfoTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      apple: [],\r\n      optionsWithSpeed: [\r\n        { name: \"easy\", speed: 900 },\r\n        { name: \"medium\", speed: 600 },\r\n        { name: \"hard\", speed: 300 }\r\n      ],\r\n      difficulty: \"easy\"\r\n    };\r\n  }\r\n\r\n  updateSpeed = e => {\r\n    console.log(e.target.options);\r\n    if (!this.props.gameStarted) {\r\n      this.setState({ difficulty: e.target.label });\r\n      this.state.optionsWithSpeed.map(item => {\r\n        if (item.name === e.target.value) {\r\n          this.props.updateBaseSpeed(item.speed);\r\n        }\r\n        return item;\r\n      });\r\n    }\r\n  };\r\n\r\n  renderSpeedOptions = () => {\r\n    return (\r\n      <select\r\n        disabled={this.props.gameStarted}\r\n        onChange={this.updateSpeed}\r\n        value={this.state.difficulty}\r\n        className={styles.speed_name}\r\n      >\r\n        {this.state.optionsWithSpeed.map(item => {\r\n          return (\r\n            <option key={item.speed} label={item.name} value={item.name} />\r\n          );\r\n        })}\r\n        ;\r\n      </select>\r\n    );\r\n  };\r\n\r\n  updateApplesForBoost = (apple = []) => {\r\n    if (apple.length < this.props.boostCount) {\r\n      apple.length = this.props.boostCount;\r\n      apple.fill(styles.apple);\r\n    }\r\n    return apple.map((i, ind) => <div className={styles.apple} key={ind} />);\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.boostCount < this.props.boostCount) {\r\n      this.updateApplesForBoost();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id={styles.showButtons} className={styles.info_container}>\r\n        <div className={styles.high_score_wrap}>\r\n          <div className={styles.high_score} />\r\n          <span className={styles.info_value}>{this.props.maxScore}</span>\r\n        </div>\r\n        <div className={styles.score_wrap}>\r\n          <div className={styles.score} />\r\n          <span className={styles.info_value}>{this.props.score}</span>\r\n        </div>\r\n        <div className={styles.time_wrap}>\r\n          <div className={styles.time} />\r\n          <span className={styles.info_value}>{this.props.timeBoost}</span>\r\n        </div>\r\n        <div className={styles.boost_container}>\r\n          <div className={styles.boost} />\r\n          <span\r\n            className={\r\n              this.props.boost ? styles.available : styles.not_available\r\n            }\r\n          />\r\n        </div>\r\n        <div className={styles.apples_container}>\r\n          {!this.props.boost ? (\r\n            this.updateApplesForBoost()\r\n          ) : (\r\n            <div className={styles.space} />\r\n          )}\r\n        </div>\r\n        <div onClick={this.updateSpeed} className={styles.speed_container}>\r\n          <div className={styles.speed} />\r\n          {this.renderSpeedOptions()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactKobra from \"./ReactKobra\";\r\nimport InfoTable from \"./InfoTable\";\r\nimport styles from \"./style.module.css\";\r\n\r\nexport default class Snake extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      score: 0,\r\n      maxScore: 0,\r\n      gameOver: true,\r\n      speed: 900,\r\n      baseSpeed: 900,\r\n      gameStarted: false,\r\n      boost: true,\r\n      boostCount: 3,\r\n      timeBoost: 5\r\n    };\r\n  }\r\n\r\n  setGameOver = bool => {\r\n    this.setState({\r\n      gameOver: bool,\r\n      score: 0\r\n    });\r\n  };\r\n\r\n  setMaxScore = score => {\r\n    this.setState(prevScore =>\r\n      prevScore.maxScore < score\r\n        ? (prevScore.maxScore = score)\r\n        : prevScore.maxScore\r\n    );\r\n  };\r\n\r\n  updateScore = score => {\r\n    this.setState({\r\n      score: score\r\n    });\r\n  };\r\n\r\n  updateBoostStatus = boost => {\r\n    this.setState({\r\n      boost: boost\r\n    });\r\n  };\r\n\r\n  updateSpeed = speed => {\r\n    this.setState({\r\n      speed: speed\r\n    });\r\n  };\r\n\r\n  updateBoostCount = count => {\r\n    this.setState({\r\n      boostCount: count\r\n    });\r\n  };\r\n\r\n  updateStartStatus = start => {\r\n    this.setState({\r\n      gameStarted: start\r\n    });\r\n  };\r\n\r\n  updateBaseSpeed = baseSpeed => {\r\n    this.setState({\r\n      baseSpeed: baseSpeed\r\n    });\r\n  };\r\n\r\n  updateBoostTime = boostTime => {\r\n    this.setState({\r\n      timeBoost: boostTime\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      score,\r\n      maxScore,\r\n      gameOver,\r\n      speed,\r\n      gameStarted,\r\n      boost,\r\n      boostCount,\r\n      baseSpeed,\r\n      timeBoost\r\n    } = this.state;\r\n    return (\r\n      <div id={styles.snake_app_container}>\r\n        <InfoTable\r\n          setGameOver={this.setGameOver}\r\n          updateSpeed={this.updateSpeed}\r\n          updateBaseSpeed={this.updateBaseSpeed}\r\n          boost={boost}\r\n          score={score}\r\n          speed={speed}\r\n          maxScore={maxScore}\r\n          baseSpeed={baseSpeed}\r\n          timeBoost={timeBoost}\r\n          boostCount={boostCount}\r\n          gameStarted={gameStarted}\r\n        />\r\n        <ReactKobra\r\n          setMaxScore={this.setMaxScore}\r\n          setGameOver={this.setGameOver}\r\n          updateSpeed={this.updateSpeed}\r\n          updateScore={this.updateScore}\r\n          updateBoostTime={this.updateBoostTime}\r\n          updateBoostCount={this.updateBoostCount}\r\n          updateStartStatus={this.updateStartStatus}\r\n          updateBoostStatus={this.updateBoostStatus}\r\n          boost={boost}\r\n          speed={speed}\r\n          gameOver={gameOver}\r\n          baseSpeed={baseSpeed}\r\n          timeBoost={timeBoost}\r\n          boostCount={boostCount}\r\n          gameStarted={gameStarted}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// Core\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport Home from \"./Components/Home\";\nimport Snake from \"./Components/Snake\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport styles from './index.module.css'\n\nReactDOM.render(\n    <HashRouter basename={process.env.PUBLIC_URL}>\n        <div id={styles.template}>\n          <Header />\n          <main>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/home\" component={Home} />\n              <Route exact path=\"/game\" component={Snake} />\n            </Switch>\n          </main>\n          <Footer />\n        </div>\n      </HashRouter>\n  ,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
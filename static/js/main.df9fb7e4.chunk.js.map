{"version":3,"sources":["serviceWorker.js","Components/Header/MenuItems.js","Components/Header/index.js","Components/Home/Greeting.js","Components/Home/index.js","Components/SnakeApp/ReactKobra.js","Components/SnakeApp/InfoTable.js","Components/SnakeApp/index.js","Components/Router/index.jsx","index.js"],"names":["Boolean","window","location","hostname","match","arr","i","MenuItems","item","map","react_default","a","createElement","key","className","Link","to","concat","Header","Component","Greeting","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","greeting","txt","split","setInterval","setState","prevState","showLetters","shift","replace","componentDidMount","_isMounted","componentWillUnmount","clearInterval","state","id","Home","Greeting_Greeting","SnakeGame","boostSpeed","event","_this$props","boost","updateBoost","code","test","isPressed","speed","changeSpeed","setTimeout","document","addEventListener","e","setDirection","setSpeed","appleEat","componentDidUpdate","prevProps","snapshot","start","gameStart","gameOver","playing","_ref","snake","apple","eat","nextState","objectSpread","head","row","direction","y","col","x","body","toConsumableArray","Math","floor","random","pop","_this$state","isTail","maxScore","length","updBoost","getAppleOnField","newApple","_this$state2","score","keyCode","_ref2","_ref3","_ref4","_ref5","isSnake","cell","isApple","find","inBody","startAgain","baseSpeed","updateCount","_ref6","countToReload","boostCount","removeEventListener","grid","cols","push","_this2","_this$state3","tabIndex","onKeyPress","onClick","InfoTable","getElementById","showButtons","target","dataset","showButon","buttonsMode","name","updateBaseSpeed","difficulty","data-id","toUpperCase","Snake","isGameOver","bool","isMaxScore","prevScore","updateScore","count","updatePlaying","InfoTable_InfoTable","ReactKobra_SnakeGame","getScore","RouterGo","HashRouter","Components_Header","Switch","Route","path","component","ReactDOM","render","Router_RouterGo","basename","process","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df9fb7e4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const arr = ['Home', 'Game'];\r\nlet i = 1;\r\nexport default function MenuItems () {\r\n    const item = arr.map(item=>\r\n      <li key={i++} className='menu-item'>\r\n        <Link to={`${item}`}>{item}</Link>\r\n      </li>\r\n    );\r\n      return (<ul>{item}</ul>)\r\n}\r\n","import React, { Component } from 'react';\r\nimport MenuItems from './MenuItems.js';\r\n// import Snake from '../SnakeApp'\r\n\r\nimport '../../App.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"App-header\">\r\n            <MenuItems />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport '../../App.css';\r\n\r\nexport default class Greeting extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this._isMounted = false;\r\n    this.state = {\r\n      showLetters: '',\r\n    }\r\n  }\r\n\r\n  greeting = () =>{\r\n    let atom = 2;\r\n    \r\n    let txt = `${atom}Hello Visitor!${atom} Greet to see You!✌️✌️✌️`.split(\"\");\r\n    return setInterval(() => {\r\n      if(!txt[0]) return false\r\n      this.setState((prevState)=> {\r\n         return prevState.showLetters += txt.shift().replace(/[2]/gi, '⚛️')\r\n      })\r\n    }, 50);\r\n\r\n  }\r\n  componentDidMount = () => {\r\n    this._isMounted = true;\r\n    this.greeting()\r\n\r\n  }\r\n  componentWillUnmount = () => {\r\n    clearInterval(this.greeting())\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render(){\r\n      return (\r\n        <div id='greet'>\r\n          <div className = \"greeting text\" >{\r\n            this._isMounted\r\n            ? <p id=\"Text-show\">{this.state.showLetters}</p>\r\n            : ''\r\n            }\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport Greeting from './Greeting'\r\n\r\nexport default class Home extends Component {\r\n  render(){\r\n      return (\r\n        <div>\r\n        <Greeting id='greeting'></Greeting>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport './style.css';\r\n\r\nexport default class SnakeGame extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    const grid = [];\r\n    for(let row = 0; row < 19; row++){\r\n      let cols = [];\r\n      for(let col = 0; col < 19; col++){\r\n         cols.push({ row, col })\r\n      }\r\n      grid.push(cols)\r\n    }\r\n    this.state = {\r\n\r\n      grid,\r\n      playing: false,\r\n      apple: {\r\n        row: Math.floor(Math.random() * 19),\r\n        col: Math.floor(Math.random() * 19),\r\n      },\r\n      countToReload: 3,\r\n      isPressed: false,\r\n      snake: {\r\n        head: {\r\n          row: 9,\r\n          col: 9\r\n        },\r\n        direction: {\r\n          x: 1,\r\n          y: 0,\r\n        },\r\n        body: [],\r\n      },\r\n      score: 0,\r\n\r\n    }\r\n    this._isMounted = false;\r\n  }\r\n\r\n  boostSpeed = (event) => {\r\n    const {boost, updateBoost} = this.props;\r\n    if(event.code === 'Space' && /[1]/gi.test(boost)) {\r\n      this.setState({isPressed: true})\r\n      updateBoost('0');\r\n      const speed = this.props.speed;\r\n      this.props.changeSpeed(this.props.speed / 2);\r\n      setTimeout(()=> {\r\n\r\n\r\n        this.setState({isPressed: false})\r\n        this.props.changeSpeed(speed)\r\n      }, 5000)\r\n\r\n    }\r\n\r\n    return\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this._isMounted = true;\r\n    document.addEventListener('keydown', (e)=> {\r\n      this.setDirection(e);\r\n      this.boostSpeed(e);\r\n\r\n    });\r\n\r\n  }\r\n  setSpeed = () => {\r\n    if(this.props.speed < 30) {\r\n      this.props.changeSpeed(30);\r\n    }\r\n    if(this.appleEat()) {\r\n      this.props.changeSpeed(this.props.speed - 20)\r\n      if(this.appleEat() && this.state.isPressed) {\r\n        this.props.changeSpeed(this.props.speed)\r\n      }\r\n    }\r\n\r\n      return this.props.speed\r\n  }\r\n  componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n    if(prevProps.start === !this.props.start){\r\n       this.gameStart();\r\n    }\r\n  }\r\n  gameStart = () => {\r\n\r\n    if(this.state.gameOver) return;\r\n    this.props.playing(true)\r\n\r\n    this.setState(({snake, apple, playing})=> {\r\n      const eat = this.appleEat();\r\n      const nextState = {\r\n        playing:true,\r\n        snake: {\r\n          ...snake,\r\n          head: {\r\n            row: snake.head.row + snake.direction.y,\r\n            col: snake.head.col + snake.direction.x,\r\n          },\r\n          body: [snake.head, ...snake.body]\r\n        },\r\n        apple: eat ? {\r\n          row: Math.floor(Math.random() * 19),\r\n          col: Math.floor(Math.random() * 19),\r\n        } : apple\r\n      }\r\n      if(!eat) nextState.snake.body.pop();\r\n      return nextState\r\n    }, () => {\r\n      const {snake, playing} = this.state;\r\n\r\n      if(this.gameOver() || this.isTail(snake.head)){\r\n        this.props.playing(false);\r\n        this.props.gameOver(true);\r\n        this.props.maxScore(snake.body.length);\r\n        clearInterval(this.gameStart)\r\n        this.setState({\r\n          gameOver: true,\r\n          playing:false,\r\n\r\n        })\r\n\r\n        return;\r\n      }\r\n      setTimeout(()=>{\r\n        this.updBoost()\r\n        this.gameStart();\r\n      }, this.setSpeed());\r\n    });\r\n  }\r\n\r\n\r\n\r\n  getAppleOnField = () => {\r\n    const {snake} = this.state;\r\n    const newApple = {\r\n      row: Math.floor(Math.random() * 19),\r\n      col: Math.floor(Math.random() * 19),\r\n    };\r\n    if(this.isTail(this.state.apple) || (snake.head.row === this.state.apple.row && snake.head.col === this.state.apple.col)) {\r\n      return this.getAppleOnField();\r\n    }\r\n      return this.setState({\r\n        apple: newApple\r\n      })\r\n\r\n\r\n  }\r\n  gameOver  = () => {\r\n    const {snake} = this.state;\r\n    if (snake.head.col < 0\r\n      ||snake.head.row < 0\r\n      ||snake.head.col > 18\r\n      ||snake.head.row > 18)\r\n      {\r\n      this.props.gameOver(true)\r\n      this.props.maxScore(snake.body.length)\r\n      return true\r\n      }\r\n      return false\r\n\r\n  }\r\n\r\n  appleEat = () => {\r\n    const {apple, snake} = this.state;\r\n    this.props.score(snake.body.length);\r\n\r\n    return apple.row === snake.head.row && apple.col === snake.head.col;\r\n  }\r\n  setDirection  = (e) => {\r\n    const {snake} = this.state;\r\n    if(e.keyCode === 40){\r\n      if(snake.direction.y === -1) return;\r\n      this.setState( ({snake}) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: 0,\r\n            y: 1,\r\n          }\r\n        }\r\n      }))\r\n    }\r\n    else if(e.keyCode === 39){\r\n      if(snake.direction.x === -1) return;\r\n      this.setState( ({snake}) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: 1,\r\n            y: 0,\r\n          }\r\n\r\n        }\r\n      }))\r\n    }\r\n    else if(e.keyCode === 38){\r\n      if(snake.direction.y === 1) return;\r\n      this.setState( ({snake}) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: 0,\r\n            y: -1,\r\n          }\r\n        }\r\n      }))\r\n    }\r\n    else if(e.keyCode === 37){\r\n      if(snake.direction.x === 1) return;\r\n      this.setState( ({snake}) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: -1,\r\n            y: 0,\r\n          }\r\n        }\r\n      }))\r\n    }\r\n  }\r\n  isSnake = (cell)=> {\r\n    const {snake} = this.state;\r\n    return cell.row === snake.head.row && cell.col === snake.head.col ? 'snake head' : ''\r\n  }\r\n  isApple = (cell) => {\r\n        const {apple} = this.state;\r\n        return cell.row === apple.row && cell.col === apple.col ? 'apple' : '';\r\n      }\r\n  isTail = (cell)=> {\r\n    const {snake} = this.state;\r\n\r\n    return snake.body.find(inBody => inBody.row === cell.row && inBody.col === cell.col)\r\n  }\r\n\r\n  startAgain = (e) => {\r\n    this.props.changeSpeed(this.props.baseSpeed)\r\n    this.props.updateCount(3)\r\n    this.props.updateBoost('1')\r\n    this.setState( ({snake, gameOver}) => {\r\n            return ({\r\n              playing: false,\r\n              gameOver: false,\r\n              snake:{\r\n                head: {\r\n                  col: 9,\r\n                  row: 9\r\n                },\r\n                body: [],\r\n                direction: {\r\n                  x: 1,\r\n                  y: 0,\r\n                }\r\n              }\r\n            }\r\n\r\n          )\r\n        })\r\n        this.props.gameOver(false)\r\n  }\r\n  updBoost = () => {\r\n\r\n    if(this.appleEat()) {\r\n      this.setState({ countToReload: this.state.countToReload - 1})\r\n      this.props.updateCount(this.props.boostCount - 1)\r\n      \r\n      return\r\n    }\r\n    if( this.state.countToReload === 0) {\r\n        this.setState(this.setState({ countToReload: 3}))\r\n        this.props.updateCount(3)\r\n       return this.props.updateBoost('1');\r\n    }\r\n    return false\r\n\r\n  }\r\n componentWillUnmount = () => {\r\n   this._isMounted = false;\r\n    clearInterval(this.gameStart)\r\n    clearInterval(this.boostSpeed)\r\n\r\n\r\n    document.removeEventListener('keydown', (e)=> {\r\n      this.setDirection(e);\r\n      this.boostSpeed(e);\r\n\r\n    });\r\n }\r\n  render(){\r\n    const {grid, snake, gameOver, playing} = this.state;\r\n    return (\r\n      <div id=\"snake\" tabIndex = \"0\" onKeyPress={this.setDirection}>\r\n        {\r\n           <div id='gridWrap'>\r\n\r\n              <section id='grid'>\r\n                    {\r\n                      this.state.grid.map( row => (\r\n                        row.map( cell => (\r\n                          <div\r\n                            key={`${cell.row} ${cell.col}`}\r\n                            className={`cell ${\r\n                              this.isSnake(cell)\r\n                              ?'head':this.isApple(cell)\r\n                              ? 'apple' : this.isTail(cell)\r\n                              ? 'tail' : ''\r\n                            }`}>\r\n                          </div>\r\n                        ))\r\n                      ))\r\n                    }\r\n\r\n                </section>\r\n                <div >\r\n                  {\r\n                    !playing\r\n                    ? (\r\n                      <div className='modal'>\r\n                        <button onClick={this.startAgain} id='start' >{gameOver ?\"Start Again\" :  'Start game'}</button>\r\n                      </div>\r\n                    )\r\n                    : ''\r\n                  }\r\n                </div>\r\n\r\n            </div>\r\n\r\n        }\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n// gameOver\r\n// ? (\r\n//   <div>\r\n//     <button onClick={this.startAgain} id='startAgain'>Play Again</button>\r\n//   </div>\r\n// )\r\n// :\r\n","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport './style.css';\r\n\r\nexport default class InfoTable extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this._isMounted = false;\r\n    this.state = {\r\n        buttonsMode:[\r\n          {name:'easy', speed:900},\r\n          {name:'medium', speed: 600},\r\n          {name:'hard', speed:300}\r\n        ],\r\n        showButon: false,\r\n        difficulty: '',\r\n\r\n    }\r\n  }\r\n  componentDidMount = () => {\r\n    this._isMounted = true;\r\n      document.getElementById('showButtons').addEventListener('mouseover', this.showButtons)\r\n  }\r\n  componentWillUnmount = () => {\r\n    this._isMounted = false;\r\n      document.getElementById('showButtons').removeEventListener('mouseover', this.showButtons)\r\n  }\r\n  showButtons = (e) => {\r\n    if(e.target.dataset.id === 'showButon'){\r\n      return this.setState({\r\n        showButon: true\r\n      })\r\n    }\r\n\r\n  }\r\n  gameStart= () => {\r\n    this.setState({\r\n      showButon: !this.state.showButon,\r\n    })\r\n    return this.props.gameOver(false)\r\n  }\r\n  changeSpeed = (e) => {\r\n      this.state.buttonsMode.map(item=> {\r\n        if(item.name === e.target.name) {\r\n          this.props.updateBaseSpeed(item.speed)\r\n          return this.props.changeSpeed(item.speed)\r\n        }\r\n      })\r\n\r\n   return  this.setState({\r\n      difficulty: e.target.name,\r\n      showButon: !this.state.showButon,\r\n    })\r\n\r\n  }\r\n  render(){\r\n    return (\r\n      <div  id='showButtons' className=\"wraper\">\r\n        <div className='info'>\r\n          <div className=\"scoreBlock\">\r\n            <h3>Score: {this.props.score}</h3>\r\n            <h3>Max score : {this.props.maxScore}</h3>\r\n            <h3>Boost: {this.props.boost === '1' ? 'Available' : 'Not available'}</h3>\r\n            <span>{this.props.boost === '0' ? `Need ${this.props.boostCount} apples`: ''}</span>\r\n            <span>Press space to activate Boost (Speed x2)</span>\r\n            \r\n          </div>\r\n          <div className='speedBlock'>\r\n            <h3   data-id='showButon'>Speed: { this.state.difficulty === '' ? 'Easy' : this.state.difficulty.replace(this.state.difficulty[0], this.state.difficulty[0].toUpperCase())}</h3>\r\n              {\r\n                 !this.state.showButtons\r\n                 ?  <div id='buttons' className='mode'>\r\n                       {\r\n                         this.state.buttonsMode.map(item=>{\r\n                           return (\r\n                             (this.state.showButon && !this.props.start)\r\n                             ?\r\n                             <button\r\n                             key={item.speed}  id={item.name}\r\n                             name={item.name} onClick={this.changeSpeed}\r\n                             className='button_speed'\r\n\r\n                             >\r\n                             {item.name.replace(item.name[0], item.name[0].toUpperCase())}\r\n                             </button>\r\n                             : ''\r\n                           )\r\n                         })\r\n                       }\r\n\r\n                   </div>\r\n                   : ''\r\n              }\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\n  // <button className={`${ this.state.showButon ? 'show' : 'hide'}`} onClick={this.gameStart} id='start'>Start the game</button>\r\n// <button  id='easy' name='easy' onClick={this.changeSpeed}>Easy</button>\r\n// <button  id='medium' name='medium' onClick={this.changeSpeed}>Medium</button>\r\n// <button  id='hard' name='hard' onClick={this.changeSpeed}>Hard</button>\r\n","import React, { Component } from 'react';\r\nimport SnakeGame from './ReactKobra';\r\nimport InfoTable from './InfoTable';\r\nimport '../../App.css';\r\nimport './style.css';\r\n\r\nexport default class Snake extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      score: 0,\r\n      maxScore: 0,\r\n      gameOver: true,\r\n      speed: 900,\r\n      baseSpeed: 900,\r\n      start: false,\r\n      boost: '1',\r\n      boostCount: 3,\r\n\r\n    }\r\n  }\r\n  isGameOver = (bool) => {\r\n    return this.setState({\r\n      gameOver: bool,\r\n      score: 0\r\n    })\r\n  }\r\n  isMaxScore = (score) => {\r\n    return this.setState(\r\n      prevScore => prevScore.maxScore < score\r\n                 ? prevScore.maxScore = score\r\n                 : prevScore.maxScore\r\n               )\r\n  }\r\n  updateScore = (score)=> {\r\n      return this.setState({\r\n        score: score\r\n      })\r\n  }\r\n  updateBoost = (boost) => {\r\n    return this.setState({\r\n      boost: boost\r\n    })\r\n  }\r\n  changeSpeed = (speed)=> {\r\n    return this.setState({\r\n      speed: speed\r\n    })\r\n  }\r\n  updateBaseSpeed = (baseSpeed) => {\r\n    return this.setState({\r\n      baseSpeed: baseSpeed\r\n    })\r\n  }\r\n  updateCount = (count) => {\r\n    return this.setState({\r\n      boostCount: count\r\n    })\r\n  }\r\n  updatePlaying = (start) => {\r\n    return this.setState({\r\n      start: start,\r\n    })\r\n  }\r\n  componentDidMount = () => {\r\n\r\n  }\r\n  componentWillUnmount = () => {\r\n    \r\n    clearInterval(SnakeGame.gameStart)\r\n\r\n  }\r\n  render(){\r\n    const {score, maxScore, gameOver, speed, start, boost, boostCount, baseSpeed} = this.state;\r\n    return (\r\n\r\n      <div id='snakeWrap' className=\"SnakeApp\">\r\n          <InfoTable\r\n            score={score}\r\n            maxScore={maxScore}\r\n            gameOver = {this.isGameOver}\r\n            speed = {speed}\r\n            start = {start}\r\n            boost = {boost}\r\n            boostCount = {boostCount}\r\n\r\n            baseSpeed = {baseSpeed}\r\n            changeSpeed = {this.changeSpeed}\r\n            updateBaseSpeed = {this.updateBaseSpeed}>\r\n\r\n          </InfoTable>\r\n          <SnakeGame\r\n            playing = {this.updatePlaying}\r\n            score={this.updateScore}\r\n            getScore = {score}\r\n            gameOver = {this.isGameOver}\r\n            changeSpeed = {this.changeSpeed}\r\n            maxScore={this.isMaxScore}\r\n            start = {gameOver}\r\n            speed = {speed}\r\n            boost = {boost}\r\n            baseSpeed = {baseSpeed}\r\n            updateCount = {this.updateCount}\r\n            boostCount = {boostCount}\r\n            updateBoost = {this.updateBoost}>\r\n          </SnakeGame>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n//\r\n// {\r\n//   gameOver\r\n//   ? (\r\n//     <div>\r\n//       <h1>Game Over! Score: {snake.body.length + 1}</h1>\r\n//       <button onClick={this.startAgain} id='startAgain'>Play Again</button>\r\n//     </div>\r\n//   )\r\n//   : <div>\r\n//       <div id='buttons'>\r\n//         <button onClick={this.startAgain} id='start'>Start the game</button>\r\n//         <div className='mode'>\r\n//           Change mode\r\n//           <button  id='easy'>Easy</button>\r\n//           <button  id='medium'>Medium</button>\r\n//           <button  id='hard'>Hard</button>\r\n//         </div>\r\n//\r\n//       </div>\r\n//\r\n//       <section id='grid'>\r\n//             {\r\n//               this.state.grid.map( row => (\r\n//                 row.map( cell => (\r\n//                   <div\r\n//                     key={`${cell.row} ${cell.col}`}\r\n//                     className={`cell ${\r\n//                       this.isSnake(cell)\r\n//                       ?'head':this.isApple(cell)\r\n//                       ? 'apple' : this.isTail(cell)\r\n//                       ? 'tail' : ''\r\n//                     }`}>\r\n//                   </div>\r\n//                 ))\r\n//               ))\r\n//             }\r\n//\r\n//         </section>\r\n//\r\n//\r\n//     </div>\r\n// }\r\n\r\n/*\r\n<div id=\"info block\">\r\n    <h3>Mode: {this.state.mode}</h3>\r\n    <h3>Score: <span>{snake.body.length + 1}</span></h3>\r\n\r\n</div>\r\n*/\r\n","import React, { Component } from 'react';\r\nimport Header from '../Header';\r\nimport Home from '../Home';\r\nimport Snake from '../SnakeApp'\r\nimport {HashRouter , Route, Switch} from 'react-router-dom'\r\n\r\n\r\nexport default class RouterGo extends Component {\r\n  _isMounted = false;\r\n  componentWillUnmount(){\r\n    clearInterval(Snake)\r\n    this._isMounted = false;\r\n  }\r\n  render (){\r\n\r\n\r\n    return (\r\n      <HashRouter  >\r\n\r\n        <div>\r\n          <Header ></Header>\r\n          <main>\r\n            <Switch>\r\n              <Route path='/game' component={Snake}/>\r\n              <Route path='/' component={Home}/>\r\n            </Switch>\r\n\r\n\r\n          </main>\r\n\r\n\r\n        </div>\r\n\r\n      </HashRouter >\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport RouterGo from './Components/Router/'\n// import MenuItems from './Components/Header/MenuItems';\n// import Header from './Components/Header';\n// import Home from './Components/Home';\n//\n// import Snake from './Components/SnakeApp'\n\n\n\n\n\nReactDOM.render(\n  <RouterGo basename={process.env.PUBLIC_URL}/>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
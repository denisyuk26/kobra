{"version":3,"sources":["Components/Header/header.module.css","Components/Home/home.module.css","Components/Snake/reactkobra.module.css","Components/Snake/style.module.css","index.module.css","Components/Snake/infotable.module.css","serviceWorker.js","Components/Header/MenuItems.js","Components/Header/index.js","Components/Home/index.js","Components/Snake/ReactKobra.js","Components/Snake/InfoTable.js","Components/Snake/index.js","index.js","Components/Footer/index.js"],"names":["module","exports","app_header","menu_item","greeting","snake","grid","start","startAgain","mobileButtonsContainer","button_boost","arrow_down","arrow_left","arrow_right","modal","cell","head","apple","move_rigth","move_left","move_down","move_up","body","snake_app_container","template","info_container","score_wrap","high_score_wrap","time_wrap","boost_container","apples_container","speed_container","speed_name","info_value","high_score","score","time","boost","available","not_available","space","speed","Boolean","window","location","hostname","match","MenuItems","item","map","index","react_default","a","createElement","key","className","styles","Link","to","concat","Header","Component","Greeting","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initGreeting","txt","split","greetingTimer","setInterval","setState","prevState","mount","showLetters","shift","componentDidMount","componentWillUnmount","clearInterval","state","_this$state","id","greet","Text_show","ReactKobra","setSpeed","updateSpeed","appleEat","boostKeyIsPressed","initBoostSpeed","event","_this$props","updateBoostStatus","gameOver","target","dataset","boostInterval","timeBoost","updateBoostTime","boostTimeout","setTimeout","boostCount","updateBoostCount","startGame","updateStartStatus","_ref","eat","nextState","objectSpread","row","direction","y","col","x","toConsumableArray","Math","floor","random","pop","isSnakeBody","setGameOver","setMaxScore","length","gameTimeOut","moveSnakeHead","setDirection","e","_ref2","_ref3","_ref4","_ref5","baseSpeed","_ref6","isApple","updateScore","isSnakeHead","find","inBody","createGridForSnake","showModalWindow","onClick","renderButtonsForMobileDevices","data-direction","button_up","button_down","button_left","button_right","data-boost","checkIsMobile","document","documentElement","clientWidth","isMobile","Array","keys","_","_this2","addEventListener","prevProps","_this$state2","gameStarted","_this3","removeEventListener","clearTimeout","tabIndex","onKeyPress","console","log","InfoTable","options","difficulty","label","optionsWithSpeed","name","value","updateBaseSpeed","renderSpeedOptions","disabled","onChange","updateApplesForBoost","arguments","undefined","fill","i","ind","showButtons","maxScore","Snake","bool","prevScore","count","boostTime","InfoTable_InfoTable","ReactKobra_ReactKobra","ReactDOM","render","HashRouter","basename","process","Components_Header","Switch","Route","exact","path","component","Home","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,WAAA,2BAAAC,UAAA,+CCAlBH,EAAAC,QAAA,CAAkBG,SAAA,2CCAlBJ,EAAAC,QAAA,CAAkBI,MAAA,0BAAAC,KAAA,yBAAAC,MAAA,0BAAAC,WAAA,+BAAAC,uBAAA,2CAAAC,aAAA,iCAAAC,WAAA,+BAAAC,WAAA,+BAAAC,YAAA,gCAAAC,MAAA,0BAAAC,KAAA,yBAAAC,KAAA,yBAAAC,MAAA,0BAAAC,WAAA,+BAAAC,UAAA,8BAAAC,UAAA,8BAAAC,QAAA,4BAAAC,KAAA,8CCAlBtB,EAAAC,QAAA,CAAkBsB,oBAAA,wDCAlBvB,EAAAC,QAAA,CAAkBuB,SAAA,8ECAlBxB,EAAAC,QAAA,CAAkBwB,eAAA,kCAAAC,WAAA,8BAAAC,gBAAA,mCAAAC,UAAA,6BAAAC,gBAAA,mCAAAC,iBAAA,oCAAAC,gBAAA,mCAAAC,WAAA,8BAAAC,WAAA,8BAAAC,WAAA,8BAAAC,MAAA,yBAAAC,KAAA,wBAAAC,MAAA,yBAAAC,UAAA,6BAAAC,cAAA,iCAAAtB,MAAA,yBAAAuB,MAAA,yBAAAC,MAAA,4HCWEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,6HCdS,SAASC,IACtB,IACMC,EADQ,CAAC,OAAQ,QACJC,IAAI,SAACD,EAAME,GAAP,OACrBC,EAAAC,EAAAC,cAAA,MAAIC,IAAKJ,EAAOK,UAAWC,IAAOrD,WAChCgD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAE,GAAAC,OAAKX,IAASA,MAG1B,OAAOG,EAAAC,EAAAC,cAAA,UAAKL,OCICY,mLATX,OAEIT,EAAAC,EAAAC,cAAA,UAAQE,UAAWC,IAAOtD,YACxBiD,EAAAC,EAAAC,cAACN,EAAD,cALWc,wCCDAC,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAORQ,aAAe,WACb,IAAIC,EAAM,+FAA6CC,MAAM,IAC7DT,EAAKU,cAAgBC,YAAY,WAC/B,IAAKH,EAAI,GAAI,OAAO,EACpBR,EAAKY,SAAS,SAAAC,GAEZ,OADAA,EAAUC,OAAQ,EACVD,EAAUE,aAAeP,EAAIQ,WAEtC,KAhBchB,EAmBnBiB,kBAAoB,WAClBjB,EAAKO,gBApBYP,EAsBnBkB,qBAAuB,WACrBC,cAAcnB,EAAKU,gBArBnBV,EAAKoB,MAAQ,CACXL,YAAa,GACbD,OAAO,GAJQd,wEA0BV,IAAAqB,EACwBlB,KAAKiB,MAA5BN,EADDO,EACCP,MAAOC,EADRM,EACQN,YAEf,OACE5B,EAAAC,EAAAC,cAAA,OAAKiC,GAAI9B,IAAO+B,OACdpC,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAOpD,UACpB0E,EAAQ3B,EAAAC,EAAAC,cAAA,KAAGiC,GAAI9B,IAAOgC,WAAYT,GAAmB,cAjC1BlB,6CCCjB4B,cACnB,SAAAA,EAAY1B,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsB,IACjBzB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwB,GAAAnB,KAAAH,KAAMJ,KA+GR2B,SAAW,WAUT,OATI1B,EAAKD,MAAMtB,MAAQ,IACrBuB,EAAKD,MAAM4B,YAAY,IAErB3B,EAAK4B,aACP5B,EAAKD,MAAM4B,YAAY3B,EAAKD,MAAMtB,MAAQ,IACtCuB,EAAK4B,YAAc5B,EAAKoB,MAAMS,mBAChC7B,EAAKD,MAAM4B,YAAY3B,EAAKD,MAAMtB,QAG/BuB,EAAKD,MAAMtB,OA1HDuB,EA6HnB8B,eAAiB,SAAAC,GAAS,IAAAC,EACahC,EAAKD,MAAlC1B,EADgB2D,EAChB3D,MAAO4D,EADSD,EACTC,kBACf,GAAkB,MAAdF,EAAMzC,KAAejB,IAAU2B,EAAKD,MAAMmC,UAA2C,UAA/BH,EAAMI,OAAOC,QAAQ/D,OAAqBA,IAAU2B,EAAKD,MAAMmC,SAAU,CACjID,GAAkB,GAClB,IAAMxD,EAAQuB,EAAKD,MAAMtB,MACzBuB,EAAKD,MAAM4B,YAAY3B,EAAKD,MAAMtB,MAAQ,GAC1CuB,EAAKY,SAAS,CAAEiB,mBAAmB,IACnC7B,EAAKqC,cAAgB1B,YAAY,WAC/B,IAAIvC,EAAO4B,EAAKD,MAAMuC,UACjBtC,EAAKD,MAAMmC,UAAUlC,EAAKD,MAAMwC,gBAAgBnE,EAAO,IAC3D,KACH4B,EAAKwC,aAAeC,WAAW,WAC7BzC,EAAKD,MAAM4B,YAAYlD,GACvBuB,EAAKY,SAAS,CACZiB,mBAAmB,IAErBV,cAAcnB,EAAKqC,gBAClB,OA9IYrC,EAiJnBiC,kBAAoB,WAClB,OAA8B,IAA1BjC,EAAKD,MAAM2C,aACb1C,EAAKD,MAAM4C,iBAAiB,GAC5B3C,EAAKD,MAAMwC,gBAAgB,GACpBvC,EAAKD,MAAMkC,mBAAkB,KArJrBjC,EA0JnB4C,UAAY,WACN5C,EAAKD,MAAMmC,WACflC,EAAKD,MAAM8C,mBAAkB,GAC7B7C,EAAKY,SACH,SAAAkC,GAAsB,IAAnBzG,EAAmByG,EAAnBzG,MAAOY,EAAY6F,EAAZ7F,MACF8F,EAAM/C,EAAK4B,WACXoB,EAAY,CAChB3G,MAAM4D,OAAAgD,EAAA,EAAAhD,CAAA,GACD5D,EADA,CAEHW,KAAM,CACJkG,IAAK7G,EAAMW,KAAKkG,IAAM7G,EAAM8G,UAAUC,EACtCC,IAAKhH,EAAMW,KAAKqG,IAAMhH,EAAM8G,UAAUG,GAExChG,KAAI,CAAGjB,EAAMW,MAAT2C,OAAAM,OAAAsD,EAAA,EAAAtD,CAAkB5D,EAAMiB,SAE9BL,MAAO+C,EAAK4B,WACR,CACEsB,IAAKM,KAAKC,MAAsB,GAAhBD,KAAKE,UACrBL,IAAKG,KAAKC,MAAsB,GAAhBD,KAAKE,WAEvBzG,GAGN,OADK8F,GAAKC,EAAU3G,MAAMiB,KAAKqG,MACxBX,GAET,WAAM,IACI3G,EAAU2D,EAAKoB,MAAf/E,MACR,GAAI2D,EAAKkC,YAAclC,EAAK4D,YAAYvH,EAAMW,MAI5C,OAHAgD,EAAKD,MAAM8C,mBAAkB,GAC7B7C,EAAKD,MAAM8D,aAAY,QACvB7D,EAAKD,MAAM+D,YAAYzH,EAAMiB,KAAKyG,QAGpC/D,EAAKgE,YAAcvB,WAAW,WAC5BzC,EAAKiC,oBACLjC,EAAK4C,aACJ5C,EAAK0B,gBA9LK1B,EAkMnBiE,cAAgB,WAAM,IACZ5H,EAAU2D,EAAKoB,MAAf/E,MACR,OAA2B,IAAvBA,EAAM8G,UAAUC,EACX5D,IAAOnC,QACiB,IAAtBhB,EAAM8G,UAAUG,EAClB9D,IAAOtC,WACiB,IAAtBb,EAAM8G,UAAUC,EAClB5D,IAAOpC,WACkB,IAAvBf,EAAM8G,UAAUG,EAClB9D,IAAOrC,eADT,GA1MU6C,EA+MnBkE,aAAe,SAAAC,GAAK,IACV9H,EAAU2D,EAAKoB,MAAf/E,MACR,GAAc,YAAV8H,EAAE7E,KAAoD,YAA/B6E,EAAEhC,OAAOC,QAAQe,UAAyB,CACnE,GAA0B,IAAtB9G,EAAM8G,UAAUC,EAAS,OAC7BpD,EAAKY,SAAS,SAAAwD,GAAA,IAAG/H,EAAH+H,EAAG/H,MAAH,MAAgB,CAC5BA,MAAM4D,OAAAgD,EAAA,EAAAhD,CAAA,GACD5D,EADA,CAEH8G,UAAW,CACTG,EAAG,EACHF,GAAI,aAIL,GAAc,eAAVe,EAAE7E,KAAuD,eAA/B6E,EAAEhC,OAAOC,QAAQe,UAA4B,CAChF,IAA2B,IAAvB9G,EAAM8G,UAAUG,EAAU,OAC9BtD,EAAKY,SAAS,SAAAyD,GAAA,IAAGhI,EAAHgI,EAAGhI,MAAH,MAAgB,CAC5BA,MAAM4D,OAAAgD,EAAA,EAAAhD,CAAA,GACD5D,EADA,CAEH8G,UAAW,CACTG,EAAG,EACHF,EAAG,aAIJ,GAAc,cAAVe,EAAE7E,KAAsD,cAA/B6E,EAAEhC,OAAOC,QAAQe,UAA2B,CAC9E,IAA2B,IAAvB9G,EAAM8G,UAAUC,EAAU,OAC9BpD,EAAKY,SAAS,SAAA0D,GAAA,IAAGjI,EAAHiI,EAAGjI,MAAH,MAAgB,CAC5BA,MAAM4D,OAAAgD,EAAA,EAAAhD,CAAA,GACD5D,EADA,CAEH8G,UAAW,CACTG,EAAG,EACHF,EAAG,aAIJ,GAAc,cAAVe,EAAE7E,KAAsD,cAA/B6E,EAAEhC,OAAOC,QAAQe,UAA2B,CAC9E,GAA0B,IAAtB9G,EAAM8G,UAAUG,EAAS,OAC7BtD,EAAKY,SAAS,SAAA2D,GAAA,IAAGlI,EAAHkI,EAAGlI,MAAH,MAAgB,CAC5BA,MAAM4D,OAAAgD,EAAA,EAAAhD,CAAA,GACD5D,EADA,CAEH8G,UAAW,CACTG,GAAI,EACJF,EAAG,UAzPMpD,EAgQnBkC,SAAW,WAAM,IACP7F,EAAU2D,EAAKoB,MAAf/E,MACR,OACEA,EAAMW,KAAKqG,IAAM,GACjBhH,EAAMW,KAAKkG,IAAM,GACjB7G,EAAMW,KAAKqG,IAAM,IACjBhH,EAAMW,KAAKkG,IAAM,MAEjBlD,EAAKD,MAAM8D,aAAY,GACvB7D,EAAKD,MAAM8C,mBAAkB,GAC7B7C,EAAKD,MAAM+D,YAAYzH,EAAMiB,KAAKyG,SAC3B,IA3QQ/D,EAgRnBxD,WAAa,SAAA2H,GACXnE,EAAKD,MAAM4B,YAAY3B,EAAKD,MAAMyE,WAClCxE,EAAKD,MAAM4C,iBAAiB,GAC5B3C,EAAKD,MAAMkC,mBAAkB,GAC7BjC,EAAKD,MAAM8D,aAAY,GACvB7D,EAAKD,MAAM8C,mBAAkB,GAC7B7C,EAAKD,MAAMwC,gBAAgB,GAC3BvC,EAAKY,SAAS,SAAA6D,GAA2BA,EAAxBpI,MAAwBoI,EAAjBjI,WACtB,MAAO,CACLA,YAAY,EACZH,MAAO,CACLW,KAAM,CACJqG,IAAK,EACLH,IAAK,GAEP5F,KAAM,GACN6F,UAAW,CACTG,EAAG,EACHF,EAAG,QAlSMpD,EA+SnB0E,QAAU,SAAA3H,GAAQ,IACRE,EAAU+C,EAAKoB,MAAfnE,MACR,OAAOF,EAAKmG,MAAQjG,EAAMiG,KAAOnG,EAAKsG,MAAQpG,EAAMoG,IAAM7D,IAAOvC,MAAQ,IAjTxD+C,EAoTnB4B,SAAW,WAAM,IAAAP,EACUrB,EAAKoB,MAAtBnE,EADOoE,EACPpE,MAAOZ,EADAgF,EACAhF,MAEf,OADA2D,EAAKD,MAAM4E,YAAYtI,EAAMiB,KAAKyG,QAC3B9G,EAAMiG,MAAQ7G,EAAMW,KAAKkG,KAAOjG,EAAMoG,MAAQhH,EAAMW,KAAKqG,KAvT/CrD,EA+TnB4E,YAAc,SAAA7H,GAAQ,IACZV,EAAU2D,EAAKoB,MAAf/E,MACR,OAAOU,EAAKmG,MAAQ7G,EAAMW,KAAKkG,KAAOnG,EAAKsG,MAAQhH,EAAMW,KAAKqG,IAAvD,GAAA1D,OACAH,IAAOnD,MADP,MAAAsD,OACiBH,IAAOxC,MAC3B,IAnUagD,EAsUnB4D,YAAc,SAAA7G,GAEZ,OADkBiD,EAAKoB,MAAf/E,MACKiB,KAAKuH,KAChB,SAAAC,GAAM,OAAIA,EAAO5B,MAAQnG,EAAKmG,KAAO4B,EAAOzB,MAAQtG,EAAKsG,OAzU1CrD,EA6UnB+E,mBAAqB,WAEnB,OADiB/E,EAAKoB,MAAd9E,KACI2C,IAAI,SAAAiE,GAAG,OACjBA,EAAIjE,IAAI,SAAAlC,GAAI,OACVoC,EAAAC,EAAAC,cAAA,OACEC,IAAG,GAAAK,OAAK5C,EAAKmG,IAAV,KAAAvD,OAAiB5C,EAAKsG,KACzB9D,UAAS,GAAAI,OAAKH,IAAOzC,KAAZ,KAAA4C,OACPK,EAAK4E,YAAY7H,GAAjB,GAAA4C,OACOH,IAAOxC,KADd,KAAA2C,OACsBH,IAAOtC,WAD7B,KAAAyC,OAC2CK,EAAKiE,iBAC5CjE,EAAK0E,QAAQ3H,GACbyC,IAAOvC,MACP+C,EAAK4D,YAAY7G,GAAjB,GAAA4C,OACGH,IAAOlC,KADV,KAEA,WA1VK0C,EAiWnBgF,gBAAkB,WAAM,IACdxI,EAAewD,EAAKoB,MAApB5E,WACR,OACE2C,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAO1C,OACrBqC,EAAAC,EAAAC,cAAA,UAAQ4F,QAASjF,EAAKxD,WAAY8E,GAAI9B,IAAOjD,OAC1CC,EAAa,cAAgB,gBAtWnBwD,EA2WnBkF,8BAAgC,WAC9B,OACE/F,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAO/C,wBACrB0C,EAAAC,EAAAC,cAAA,UAAS8F,iBAAe,UAAU5F,UAAWC,IAAO4F,WAAWjG,EAAAC,EAAAC,cAAA,OAAK8F,iBAAe,aACnFhG,EAAAC,EAAAC,cAAA,UAAQ8F,iBAAe,YAAY5F,UAAWC,IAAO6F,aAAalG,EAAAC,EAAAC,cAAA,OAAK8F,iBAAe,YAAY5F,UAAWC,IAAO7C,cACpHwC,EAAAC,EAAAC,cAAA,UAAS8F,iBAAe,YAAY5F,UAAWC,IAAO8F,aAAanG,EAAAC,EAAAC,cAAA,OAAK8F,iBAAe,YAAY5F,UAAWC,IAAO5C,cACrHuC,EAAAC,EAAAC,cAAA,UAAS8F,iBAAe,aAAa5F,UAAWC,IAAO+F,cAAcpG,EAAAC,EAAAC,cAAA,OAAK8F,iBAAe,aAAa5F,UAAWC,IAAO3C,eACxHsC,EAAAC,EAAAC,cAAA,UAASmG,aAAW,QAAQjG,UAAWC,IAAO9C,cAAcyC,EAAAC,EAAAC,cAAA,OAAKmG,aAAW,SAAhB,kBAlX/CxF,EAsanByF,cAAgB,WACFC,SAASC,gBAAgBC,aACzB,KACV5F,EAAKY,SAAS,CAACiF,UAAU,KAva3B,IAAMvJ,EAAO2D,OAAAsD,EAAA,EAAAtD,CAAI6F,MAAM,IAAIC,QAAQ9G,IAAI,SAAC+G,EAAG9C,GACzC,OAAOjD,OAAAsD,EAAA,EAAAtD,CAAI6F,MAAM,KAAK7G,IAAI,SAAC+G,EAAG3C,GAC5B,MAAO,CACLH,IAAKA,EACLG,IAAKA,OANM,OAUjBrD,EAAKoB,MAAQ,CACX9E,OACAW,MAAO,CACLiG,IAAKM,KAAKC,MAAsB,GAAhBD,KAAKE,UACrBL,IAAKG,KAAKC,MAAsB,GAAhBD,KAAKE,WAEvBrH,MAAO,CACLW,KAAM,CACJkG,IAAK,EACLG,IAAK,GAEPF,UAAW,CACTG,EAAG,EACHF,EAAG,GAEL9F,KAAM,IAERd,YAAY,EACZqF,mBAAmB,EACnBgE,UAAU,GA7BK7F,mFAiCC,IAAAiG,EAAA9F,KAClBA,KAAKsF,gBACLC,SAASQ,iBAAiB,QAAS,SAAA/B,GACjC8B,EAAK/B,aAAaC,GAClB8B,EAAKnE,eAAeqC,KAGtBuB,SAASQ,iBAAiB,UAAW,SAAA/B,GACnC8B,EAAK/B,aAAaC,GAClB8B,EAAKnE,eAAeqC,gDAILgC,GAAW,IAAAC,EACHjG,KAAKiB,MAAtB/E,EADoB+J,EACpB/J,MAAOY,EADamJ,EACbnJ,MACT8F,EAAM9F,EAAMiG,MAAQ7G,EAAMW,KAAKkG,KAAOjG,EAAMoG,MAAQhH,EAAMW,KAAKqG,IACjE8C,EAAUE,eAAiBlG,KAAKJ,MAAMsG,aACxClG,KAAKyC,YAGHG,GACF5C,KAAKS,SAAS,CACZvE,MAAM4D,OAAAgD,EAAA,EAAAhD,CAAA,GACD5D,EADA,CAEHiB,KAAI,GAAAqC,OAAAM,OAAAsD,EAAA,EAAAtD,CAAM5D,EAAMiB,MAAZ,CAAkBjB,EAAMW,SAE9BC,MAAOkD,KAAKyB,WACR,CACEsB,IAAKM,KAAKC,MAAsB,GAAhBD,KAAKE,UACrBL,IAAKG,KAAKC,MAAsB,GAAhBD,KAAKE,WAEvBzG,KAIJ8F,GAAQ5C,KAAKJ,MAAM1B,OAAU8B,KAAKiB,MAAMS,mBAC1C1B,KAAKJ,MAAM4C,iBAAiBxC,KAAKJ,MAAM2C,WAAa,kDAKjC,IAAA4D,EAAAnG,KAErBuF,SAASa,oBAAoB,UAAW,SAAApC,GACtCmC,EAAKpC,aAAaC,GAClBmC,EAAKxE,eAAeqC,KAGtBhD,cAAchB,KAAKkC,eACnBmE,aAAarG,KAAK6D,YAAa7D,KAAKqC,+CA2VpC,OACErD,EAAAC,EAAAC,cAAA,OAAKiC,GAAI9B,IAAOnD,MAAOoK,SAAS,IAAIC,WAAYvG,KAAK+D,cACnD/E,EAAAC,EAAAC,cAAA,WAASiC,GAAI9B,IAAOlD,MAAO6D,KAAK4E,sBAC/B5E,KAAKiB,MAAMyE,SAAW1F,KAAK+E,gCAAkC,KAC9D/F,EAAAC,EAAAC,cAAA,WAAMc,KAAKJ,MAAMmC,SAAW/B,KAAK6E,kBAAoB,cAlbrBnF,6BCDxC8G,QAAQC,IAAIpH,SACSqH,cACnB,SAAAA,EAAY9G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0G,IACjB7G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4G,GAAAvG,KAAAH,KAAMJ,KAYR4B,YAAc,SAAAwC,GACZwC,QAAQC,IAAIzC,EAAEhC,OAAO2E,SAChB9G,EAAKD,MAAMsG,cACdrG,EAAKY,SAAS,CAAEmG,WAAY5C,EAAEhC,OAAO6E,QACrChH,EAAKoB,MAAM6F,iBAAiBhI,IAAI,SAAAD,GAI9B,OAHIA,EAAKkI,OAAS/C,EAAEhC,OAAOgF,OACzBnH,EAAKD,MAAMqH,gBAAgBpI,EAAKP,OAE3BO,MArBMgB,EA0BnBqH,mBAAqB,WACnB,OACElI,EAAAC,EAAAC,cAAA,UACEiI,SAAUtH,EAAKD,MAAMsG,YACrBkB,SAAUvH,EAAK2B,YACfwF,MAAOnH,EAAKoB,MAAM2F,WAClBxH,UAAWC,IAAOxB,YAEjBgC,EAAKoB,MAAM6F,iBAAiBhI,IAAI,SAAAD,GAC/B,OACEG,EAAAC,EAAAC,cAAA,UAAQC,IAAKN,EAAKP,MAAOuI,MAAOhI,EAAKkI,KAAMC,MAAOnI,EAAKkI,SAR7D,MA5BelH,EA4CnBwH,qBAAuB,WAAgB,IAAfvK,EAAewK,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAP,GAK9B,OAJIxK,EAAM8G,OAAS/D,EAAKD,MAAM2C,aAC5BzF,EAAM8G,OAAS/D,EAAKD,MAAM2C,WAC1BzF,EAAM0K,KAAKnI,IAAOvC,QAEbA,EAAMgC,IAAI,SAAC2I,EAAGC,GAAJ,OAAY1I,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAOvC,MAAOqC,IAAKuI,OA/ChE7H,EAAKoB,MAAQ,CACXnE,MAAO,GACPgK,iBAAkB,CAChB,CAAEC,KAAM,OAAQzI,MAAO,KACvB,CAAEyI,KAAM,SAAUzI,MAAO,KACzB,CAAEyI,KAAM,OAAQzI,MAAO,MAEzBsI,WAAY,QATG/G,kFAoDAmG,GACbA,EAAUzD,WAAavC,KAAKJ,MAAM2C,YACpCvC,KAAKqH,wDAKP,OACErI,EAAAC,EAAAC,cAAA,OAAKiC,GAAI9B,IAAOsI,YAAavI,UAAWC,IAAO/B,gBAC7C0B,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAO7B,iBACrBwB,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAOtB,aACvBiB,EAAAC,EAAAC,cAAA,QAAME,UAAWC,IAAOvB,YAAakC,KAAKJ,MAAMgI,WAElD5I,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAO9B,YACrByB,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAOrB,QACvBgB,EAAAC,EAAAC,cAAA,QAAME,UAAWC,IAAOvB,YAAakC,KAAKJ,MAAM5B,QAElDgB,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAO5B,WACrBuB,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAOpB,OACvBe,EAAAC,EAAAC,cAAA,QAAME,UAAWC,IAAOvB,YAAakC,KAAKJ,MAAMuC,YAElDnD,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAO3B,iBACrBsB,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAOnB,QACvBc,EAAAC,EAAAC,cAAA,QACEE,UACEY,KAAKJ,MAAM1B,MAAQmB,IAAOlB,UAAYkB,IAAOjB,iBAInDY,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAO1B,kBACnBqC,KAAKJ,MAAM1B,MAGXc,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAOhB,QAFvB2B,KAAKqH,wBAKTrI,EAAAC,EAAAC,cAAA,OAAK4F,QAAS9E,KAAKwB,YAAapC,UAAWC,IAAOzB,iBAChDoB,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAOf,QACtB0B,KAAKkH,8BA3FuBxH,8BCClBmI,cACnB,SAAAA,EAAYjI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6H,IACjBhI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+H,GAAA1H,KAAAH,KAAMJ,KAcR8D,YAAc,SAAAoE,GACZjI,EAAKY,SAAS,CACZsB,SAAU+F,EACV9J,MAAO,KAlBQ6B,EAsBnB8D,YAAc,SAAA3F,GACZ6B,EAAKY,SAAS,SAAAsH,GAAS,OACrBA,EAAUH,SAAW5J,EAChB+J,EAAUH,SAAW5J,EACtB+J,EAAUH,YA1BC/H,EA8BnB2E,YAAc,SAAAxG,GACZ6B,EAAKY,SAAS,CACZzC,MAAOA,KAhCQ6B,EAoCnBiC,kBAAoB,SAAA5D,GAClB2B,EAAKY,SAAS,CACZvC,MAAOA,KAtCQ2B,EA0CnB2B,YAAc,SAAAlD,GACZuB,EAAKY,SAAS,CACZnC,MAAOA,KA5CQuB,EAgDnB2C,iBAAmB,SAAAwF,GACjBnI,EAAKY,SAAS,CACZ8B,WAAYyF,KAlDGnI,EAsDnB6C,kBAAoB,SAAAtG,GAClByD,EAAKY,SAAS,CACZyF,YAAa9J,KAxDEyD,EA4DnBoH,gBAAkB,SAAA5C,GAChBxE,EAAKY,SAAS,CACZ4D,UAAWA,KA9DIxE,EAkEnBuC,gBAAkB,SAAA6F,GAChBpI,EAAKY,SAAS,CACZ0B,UAAW8F,KAlEbpI,EAAKoB,MAAQ,CACXjD,MAAO,EACP4J,SAAU,EACV7F,UAAU,EACVzD,MAAO,IACP+F,UAAW,IACX6B,aAAa,EACbhI,OAAO,EACPqE,WAAY,EACZJ,UAAW,GAXItC,wEAwEV,IAAAqB,EAWHlB,KAAKiB,MATPjD,EAFKkD,EAELlD,MACA4J,EAHK1G,EAGL0G,SACA7F,EAJKb,EAILa,SACAzD,EALK4C,EAKL5C,MACA4H,EANKhF,EAMLgF,YACAhI,EAPKgD,EAOLhD,MACAqE,EARKrB,EAQLqB,WACA8B,EATKnD,EASLmD,UACAlC,EAVKjB,EAULiB,UAEF,OACEnD,EAAAC,EAAAC,cAAA,OAAKiC,GAAI9B,IAAOjC,qBACd4B,EAAAC,EAAAC,cAACgJ,EAAD,CACExE,YAAa1D,KAAK0D,YAClBlC,YAAaxB,KAAKwB,YAClByF,gBAAiBjH,KAAKiH,gBACtB/I,MAAOA,EACPF,MAAOA,EACPM,MAAOA,EACPsJ,SAAUA,EACVvD,UAAWA,EACXlC,UAAWA,EACXI,WAAYA,EACZ2D,YAAaA,IAEflH,EAAAC,EAAAC,cAACiJ,EAAD,CACExE,YAAa3D,KAAK2D,YAClBD,YAAa1D,KAAK0D,YAClBlC,YAAaxB,KAAKwB,YAClBgD,YAAaxE,KAAKwE,YAClBpC,gBAAiBpC,KAAKoC,gBACtBI,iBAAkBxC,KAAKwC,iBACvBE,kBAAmB1C,KAAK0C,kBACxBZ,kBAAmB9B,KAAK8B,kBACxB5D,MAAOA,EACPI,MAAOA,EACPyD,SAAUA,EACVsC,UAAWA,EACXlC,UAAWA,EACXI,WAAYA,EACZ2D,YAAaA,YAnHYxG,sDCMnC0I,IAASC,OACLrJ,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,CAAYC,SAAUC,UAClBxJ,EAAAC,EAAAC,cAAA,OAAKiC,GAAI9B,IAAOhC,UACd2B,EAAAC,EAAAC,cAACuJ,EAAD,MACAzJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,KACE1J,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC/J,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWC,IACrC/J,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWjB,MAGzC7I,EAAAC,EAAAC,cClBK,WAEX,OAEIF,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,4BDaE,QAIRqG,SAASyD,eAAe,SPuGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7270f3b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_header\":\"header_app_header__2aFTa\",\"menu_item\":\"header_menu_item__3kBGU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"home_greeting__3m25k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snake\":\"reactkobra_snake__1J3wN\",\"grid\":\"reactkobra_grid__uP3WP\",\"start\":\"reactkobra_start__2U5mj\",\"startAgain\":\"reactkobra_startAgain__2bJ2d\",\"mobileButtonsContainer\":\"reactkobra_mobileButtonsContainer__1GQ-p\",\"button_boost\":\"reactkobra_button_boost__1_UUY\",\"arrow_down\":\"reactkobra_arrow_down__sMG0u\",\"arrow_left\":\"reactkobra_arrow_left__16AaP\",\"arrow_right\":\"reactkobra_arrow_right__2jA1D\",\"modal\":\"reactkobra_modal__1e0QJ\",\"cell\":\"reactkobra_cell__1u2kJ\",\"head\":\"reactkobra_head__12NRZ\",\"apple\":\"reactkobra_apple__1qYFX\",\"move_rigth\":\"reactkobra_move_rigth__21TEl\",\"move_left\":\"reactkobra_move_left__LShQn\",\"move_down\":\"reactkobra_move_down__1zivM\",\"move_up\":\"reactkobra_move_up__2Xq7i\",\"body\":\"reactkobra_body__qB6C5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snake_app_container\":\"style_snake_app_container__3Bduf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template\":\"src_template__1u8wO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info_container\":\"infotable_info_container__2eYkx\",\"score_wrap\":\"infotable_score_wrap__1758e\",\"high_score_wrap\":\"infotable_high_score_wrap__Advbt\",\"time_wrap\":\"infotable_time_wrap__BmZR-\",\"boost_container\":\"infotable_boost_container__3GUTv\",\"apples_container\":\"infotable_apples_container__1mUCj\",\"speed_container\":\"infotable_speed_container__2B5fE\",\"speed_name\":\"infotable_speed_name__AMK2K\",\"info_value\":\"infotable_info_value__27jyp\",\"high_score\":\"infotable_high_score__3frP1\",\"score\":\"infotable_score__2hKm0\",\"time\":\"infotable_time__2X-E7\",\"boost\":\"infotable_boost__2ttVR\",\"available\":\"infotable_available__15e36\",\"not_available\":\"infotable_not_available__1DI91\",\"apple\":\"infotable_apple__27dkD\",\"space\":\"infotable_space__iXJmw\",\"speed\":\"infotable_speed___JEV7\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./header.module.css\";\r\n\r\nexport default function MenuItems() {\r\n  const links = [\"home\", \"game\"];\r\n  const item = links.map((item, index) => (\r\n    <li key={index} className={styles.menu_item}>\r\n      <Link to={`${item}`}>{item}</Link>\r\n    </li>\r\n  ));\r\n  return <ul>{item}</ul>;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport MenuItems from \"./MenuItems.js\";\r\nimport styles from \"./header.module.css\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      \r\n        <header className={styles.app_header}>\r\n          <MenuItems />\r\n        </header>\r\n      \r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./home.module.css\";\r\n\r\nexport default class Greeting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showLetters: \"\",\r\n      mount: false\r\n    };\r\n  }\r\n\r\n  initGreeting = () => {\r\n    let txt = `⚛️Hello Visitor!⚛️ Greet to see You!✌️✌️✌️`.split(\"\");\r\n    this.greetingTimer = setInterval(() => {\r\n      if (!txt[0]) return false;\r\n      this.setState(prevState => {\r\n        prevState.mount = true;\r\n        return (prevState.showLetters += txt.shift());\r\n      });\r\n    }, 50);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.initGreeting();\r\n  };\r\n  componentWillUnmount = () => {\r\n    clearInterval(this.greetingTimer);\r\n  };\r\n\r\n  render() {\r\n    const { mount, showLetters } = this.state;\r\n\r\n    return (\r\n      <div id={styles.greet}>\r\n        <div className={styles.greeting}>\r\n          {mount ? <p id={styles.Text_show}>{showLetters}</p> : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport styles from \"./reactkobra.module.css\";\r\n\r\nexport default class ReactKobra extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const grid = [...Array(19).keys()].map((_, row) => {\r\n      return [...Array(19)].map((_, col) => {\r\n        return {\r\n          row: row,\r\n          col: col\r\n        };\r\n      });\r\n    });\r\n    this.state = {\r\n      grid,\r\n      apple: {\r\n        row: Math.floor(Math.random() * 19),\r\n        col: Math.floor(Math.random() * 19)\r\n      },\r\n      snake: {\r\n        head: {\r\n          row: 9,\r\n          col: 9\r\n        },\r\n        direction: {\r\n          x: 1,\r\n          y: 0\r\n        },\r\n        body: []\r\n      },\r\n      startAgain: false,\r\n      boostKeyIsPressed: false,\r\n      isMobile: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkIsMobile()\r\n    document.addEventListener('click', e=> {\r\n      this.setDirection(e);\r\n      this.initBoostSpeed(e);\r\n\r\n    })\r\n    document.addEventListener(\"keydown\", e => {\r\n      this.setDirection(e);\r\n      this.initBoostSpeed(e);\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { snake, apple } = this.state;\r\n    const eat = apple.row === snake.head.row && apple.col === snake.head.col;\r\n    if (prevProps.gameStarted === !this.props.gameStarted) {\r\n      this.startGame();\r\n    }\r\n    //this condition help us to know when snake eat apple, then re-render apple immediately\r\n    if (eat) {\r\n      this.setState({\r\n        snake: {\r\n          ...snake,\r\n          body: [...snake.body, snake.head]\r\n        },\r\n        apple: this.appleEat()\r\n          ? {\r\n              row: Math.floor(Math.random() * 19),\r\n              col: Math.floor(Math.random() * 19)\r\n            }\r\n          : apple\r\n      });\r\n    }\r\n    //update apples count for boost\r\n    if (eat && !this.props.boost && !this.state.boostKeyIsPressed) {\r\n      this.props.updateBoostCount(this.props.boostCount - 1);\r\n    }\r\n    \r\n  }\r\n\r\n  componentWillUnmount() {\r\n    \r\n    document.removeEventListener(\"keydown\", e => {\r\n      this.setDirection(e);\r\n      this.initBoostSpeed(e);\r\n    });\r\n\r\n    clearInterval(this.boostInterval);\r\n    clearTimeout(this.gameTimeOut, this.boostTimeout);\r\n  }\r\n\r\n  /* methods for settings (\r\n\r\n  setSpeed()\r\n   * if snake eat apple, decrease this.props.speed by 20 every time,\r\n   * the smallest speed is 30,\r\n   * if in boost mode snake eat apple,  speed don't change. It always equal to the value    this.props.speed after pressed the 'Space' key\r\n   * return num for setInterval\r\n  initBoostSpeed()\r\n    * if \"Space\" key pressed and the props boost is 1, divided props.speed by 2,\r\n    * after 5000 ms speed change on speed before activated boost\r\n  updateBoostStatus()\r\n    * update props boostCount every time when snake eat apple\r\n    * if props boostCount equal 0, refresh boostCount to default value (3)\r\n  startGame()\r\n    * if props gameOver true do nothing\r\n    * else we have 2 callback in setState,\r\n     ** 1st callback generate new state for snake head, snake body and apple and if snake don't eat apple we delete last element of snake body array, else return new state\r\n     ** 2nd callback check if game is over  or if snake eat self update props for generate gameOver, else run setInterval with methods updateBoostStatus() startGame(), which update every setSpeed()\r\n   setDirection()\r\n    * set state snake.direction depended on key is pressed\r\n    * if direction x or y is 1 and user try to change it to -1 return false\r\n   gameOver()\r\n    * check if snake head coordinates less or bigger than coordinates of col/row grid update props gameOver, start, and check send score for check is it bigger than previous\r\n   startAgain()\r\n    * change setting to default and start game again\r\n  */\r\n\r\n  setSpeed = () => {\r\n    if (this.props.speed < 30) {\r\n      this.props.updateSpeed(30);\r\n    }\r\n    if (this.appleEat()) {\r\n      this.props.updateSpeed(this.props.speed - 20);\r\n      if (this.appleEat() && this.state.boostKeyIsPressed) {\r\n        this.props.updateSpeed(this.props.speed);\r\n      }\r\n    }\r\n    return this.props.speed;\r\n  };\r\n\r\n  initBoostSpeed = event => {\r\n    const { boost, updateBoostStatus } = this.props;\r\n    if (event.key === \" \" && boost && !this.props.gameOver || event.target.dataset.boost === \"Boost\" && boost && !this.props.gameOver) {\r\n      updateBoostStatus(false);\r\n      const speed = this.props.speed;\r\n      this.props.updateSpeed(this.props.speed / 2);\r\n      this.setState({ boostKeyIsPressed: true });\r\n      this.boostInterval = setInterval(() => {\r\n        let time = this.props.timeBoost;\r\n        if (!this.props.gameOver) this.props.updateBoostTime(time - 1);\r\n      }, 1000);\r\n      this.boostTimeout = setTimeout(() => {\r\n        this.props.updateSpeed(speed);\r\n        this.setState({\r\n          boostKeyIsPressed: false\r\n        });\r\n        clearInterval(this.boostInterval);\r\n      }, 5000);\r\n    }\r\n  };\r\n  updateBoostStatus = () => {\r\n    if (this.props.boostCount === 0) {\r\n      this.props.updateBoostCount(3);\r\n      this.props.updateBoostTime(5);\r\n      return this.props.updateBoostStatus(true);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  startGame = () => {\r\n    if (this.props.gameOver) return;\r\n    this.props.updateStartStatus(true);\r\n    this.setState(\r\n      ({ snake, apple }) => {\r\n        const eat = this.appleEat();\r\n        const nextState = {\r\n          snake: {\r\n            ...snake,\r\n            head: {\r\n              row: snake.head.row + snake.direction.y,\r\n              col: snake.head.col + snake.direction.x\r\n            },\r\n            body: [snake.head, ...snake.body]\r\n          },\r\n          apple: this.appleEat()\r\n            ? {\r\n                row: Math.floor(Math.random() * 19),\r\n                col: Math.floor(Math.random() * 19)\r\n              }\r\n            : apple\r\n        };\r\n        if (!eat) nextState.snake.body.pop();\r\n        return nextState;\r\n      },\r\n      () => {\r\n        const { snake } = this.state;\r\n        if (this.gameOver() || this.isSnakeBody(snake.head)) {\r\n          this.props.updateStartStatus(false);\r\n          this.props.setGameOver(true);\r\n          this.props.setMaxScore(snake.body.length);\r\n          return;\r\n        }\r\n        this.gameTimeOut = setTimeout(() => {\r\n          this.updateBoostStatus();\r\n          this.startGame();\r\n        }, this.setSpeed());\r\n      }\r\n    );\r\n  };\r\n  moveSnakeHead = () => {\r\n    const { snake } = this.state;\r\n    if (snake.direction.y === -1) {\r\n      return styles.move_up;\r\n    } else if (snake.direction.x === 1) {\r\n      return styles.move_rigth;\r\n    } else if (snake.direction.y === 1) {\r\n      return styles.move_down;\r\n    } else if (snake.direction.x === -1) {\r\n      return styles.move_left;\r\n    }\r\n  };\r\n\r\n  setDirection = e => {\r\n    const { snake } = this.state;\r\n    if (e.key === \"ArrowUp\" || e.target.dataset.direction === \"ArrowUp\") {\r\n      if (snake.direction.y === 1) return;\r\n      this.setState(({ snake }) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: 0,\r\n            y: -1\r\n          }\r\n        }\r\n      }));\r\n    } else if (e.key === \"ArrowRight\" || e.target.dataset.direction === \"ArrowRight\") {\r\n      if (snake.direction.x === -1) return;\r\n      this.setState(({ snake }) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: 1,\r\n            y: 0\r\n          }\r\n        }\r\n      }));\r\n    } else if (e.key === \"ArrowDown\" || e.target.dataset.direction === \"ArrowDown\") {\r\n      if (snake.direction.y === -1) return;\r\n      this.setState(({ snake }) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: 0,\r\n            y: 1\r\n          }\r\n        }\r\n      }));\r\n    } else if (e.key === \"ArrowLeft\" || e.target.dataset.direction === \"ArrowLeft\") {\r\n      if (snake.direction.x === 1) return;\r\n      this.setState(({ snake }) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: -1,\r\n            y: 0\r\n          }\r\n        }\r\n      }));\r\n    }\r\n  };\r\n\r\n  gameOver = () => {\r\n    const { snake } = this.state;\r\n    if (\r\n      snake.head.col < 0 ||\r\n      snake.head.row < 0 ||\r\n      snake.head.col > 18 ||\r\n      snake.head.row > 18\r\n    ) {\r\n      this.props.setGameOver(true);\r\n      this.props.updateStartStatus(false);\r\n      this.props.setMaxScore(snake.body.length);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  startAgain = e => {\r\n    this.props.updateSpeed(this.props.baseSpeed);\r\n    this.props.updateBoostCount(3);\r\n    this.props.updateBoostStatus(true);\r\n    this.props.setGameOver(false);\r\n    this.props.updateStartStatus(true);\r\n    this.props.updateBoostTime(5);\r\n    this.setState(({ snake, startAgain }) => {\r\n      return {\r\n        startAgain: true,\r\n        snake: {\r\n          head: {\r\n            col: 9,\r\n            row: 9\r\n          },\r\n          body: [],\r\n          direction: {\r\n            x: 1,\r\n            y: 0\r\n          }\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  /* methods for apple (\r\n  getAppleOnField() generate random apple on field,\r\n  isApple() check apple.row and apple.col with grid coordinates,\r\n  appleEat() check apple.row and apple.col with snake.head coordinates)\r\n  */\r\n\r\n  isApple = cell => {\r\n    const { apple } = this.state;\r\n    return cell.row === apple.row && cell.col === apple.col ? styles.apple : \"\";\r\n  };\r\n\r\n  appleEat = () => {\r\n    const { apple, snake } = this.state;\r\n    this.props.updateScore(snake.body.length);\r\n    return apple.row === snake.head.row && apple.col === snake.head.col;\r\n  };\r\n\r\n  /* methods for snake head and snake body (\r\n  isSnakeHead() check snake.head.row and snake.head.col with grid coordinates,\r\n  isSnakeBody() tail is array with obj ({col: value, row: value}) I check if coordinates of snake.body equal with grid coordinates return true ,\r\n  */\r\n\r\n  isSnakeHead = cell => {\r\n    const { snake } = this.state;\r\n    return cell.row === snake.head.row && cell.col === snake.head.col\r\n      ? `${styles.snake}, ${styles.head}`\r\n      : \"\";\r\n  };\r\n\r\n  isSnakeBody = cell => {\r\n    const { snake } = this.state;\r\n    return snake.body.find(\r\n      inBody => inBody.row === cell.row && inBody.col === cell.col\r\n    );\r\n  };\r\n\r\n  createGridForSnake = () => {\r\n    const { grid } = this.state;\r\n    return grid.map(row =>\r\n      row.map(cell => (\r\n        <div\r\n          key={`${cell.row} ${cell.col}`}\r\n          className={`${styles.cell} ${\r\n            this.isSnakeHead(cell)\r\n              ? `${styles.head} ${styles.move_rigth} ${this.moveSnakeHead()}`\r\n              : this.isApple(cell)\r\n              ? styles.apple\r\n              : this.isSnakeBody(cell)\r\n              ? `${styles.body} `\r\n              : \"\"\r\n          }`}\r\n        />\r\n      ))\r\n    );\r\n  };\r\n\r\n  showModalWindow = () => {\r\n    const { startAgain } = this.state;\r\n    return (\r\n      <div className={styles.modal}>\r\n        <button onClick={this.startAgain} id={styles.start}>\r\n          {startAgain ? \"Start Again\" : \"Start game\"}\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n  renderButtonsForMobileDevices = () => {\r\n    return (\r\n      <div className={styles.mobileButtonsContainer}>\r\n        <button  data-direction=\"ArrowUp\" className={styles.button_up}><div data-direction=\"ArrowUp\" /></button>\r\n        <button data-direction=\"ArrowDown\" className={styles.button_down}><div data-direction=\"ArrowDown\" className={styles.arrow_down} /></button>\r\n        <button  data-direction=\"ArrowLeft\" className={styles.button_left}><div data-direction=\"ArrowLeft\" className={styles.arrow_left} /></button>\r\n        <button  data-direction=\"ArrowRight\" className={styles.button_right}><div data-direction=\"ArrowRight\" className={styles.arrow_right} /></button>\r\n        <button  data-boost=\"Boost\" className={styles.button_boost}><div data-boost=\"Boost\">Boost speed</div></button>\r\n\r\n      </div>\r\n    )\r\n  }\r\n  // setMobileDirection = (e) => {\r\n  //   const { snake } = this.state;\r\n  //   e.preventDefault()\r\n  //   console.log(e.target.dataset)\r\n  //   if (e.target.dataset.direction === \"ArrowUp\") {\r\n  //     this.setState(({ snake }) => ({\r\n  //       snake: {\r\n  //         ...snake,\r\n  //         direction: {\r\n  //           x: 0,\r\n  //           y: -1\r\n  //         }\r\n  //       }\r\n  //     }));\r\n  //   } else if (e.target.dataset.direction === \"ArrowRight\") {\r\n  //     this.setState(({ snake }) => ({\r\n  //       snake: {\r\n  //         ...snake,\r\n  //         direction: {\r\n  //           x: 1,\r\n  //           y: 0\r\n  //         }\r\n  //       }\r\n  //     }));\r\n  //   } else if (e.target.dataset.direction === \"ArrowDown\") {\r\n  //     this.setState(({ snake }) => ({\r\n  //       snake: {\r\n  //         ...snake,\r\n  //         direction: {\r\n  //           x: 0,\r\n  //           y: 1\r\n  //         }\r\n  //       }\r\n  //     }));\r\n  //   } else if (e.target.dataset.direction === \"ArrowLeft\") {\r\n    \r\n  //     this.setState(({ snake }) => ({\r\n  //       snake: {\r\n  //         ...snake,\r\n  //         direction: {\r\n  //           x: -1,\r\n  //           y: 0\r\n  //         }\r\n  //       }\r\n  //     }));\r\n  //   }\r\n  // }\r\n  checkIsMobile = () => {\r\n    let width = document.documentElement.clientWidth;\r\n    if(width <= 768) {\r\n      this.setState({isMobile: true})\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div id={styles.snake} tabIndex=\"0\" onKeyPress={this.setDirection}>\r\n        <section id={styles.grid}>{this.createGridForSnake()}</section>\r\n        {this.state.isMobile ? this.renderButtonsForMobileDevices() : null}\r\n        <div>{this.props.gameOver ? this.showModalWindow() : null}</div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport styles from \"./infotable.module.css\";\r\nconsole.log(styles);\r\nexport default class InfoTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      apple: [],\r\n      optionsWithSpeed: [\r\n        { name: \"easy\", speed: 900 },\r\n        { name: \"medium\", speed: 600 },\r\n        { name: \"hard\", speed: 300 }\r\n      ],\r\n      difficulty: \"easy\"\r\n    };\r\n  }\r\n\r\n  updateSpeed = e => {\r\n    console.log(e.target.options);\r\n    if (!this.props.gameStarted) {\r\n      this.setState({ difficulty: e.target.label });\r\n      this.state.optionsWithSpeed.map(item => {\r\n        if (item.name === e.target.value) {\r\n          this.props.updateBaseSpeed(item.speed);\r\n        }\r\n        return item;\r\n      });\r\n    }\r\n  };\r\n\r\n  renderSpeedOptions = () => {\r\n    return (\r\n      <select\r\n        disabled={this.props.gameStarted}\r\n        onChange={this.updateSpeed}\r\n        value={this.state.difficulty}\r\n        className={styles.speed_name}\r\n      >\r\n        {this.state.optionsWithSpeed.map(item => {\r\n          return (\r\n            <option key={item.speed} label={item.name} value={item.name} />\r\n          );\r\n        })}\r\n        ;\r\n      </select>\r\n    );\r\n  };\r\n\r\n  updateApplesForBoost = (apple = []) => {\r\n    if (apple.length < this.props.boostCount) {\r\n      apple.length = this.props.boostCount;\r\n      apple.fill(styles.apple);\r\n    }\r\n    return apple.map((i, ind) => <div className={styles.apple} key={ind} />);\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.boostCount < this.props.boostCount) {\r\n      this.updateApplesForBoost();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id={styles.showButtons} className={styles.info_container}>\r\n        <div className={styles.high_score_wrap}>\r\n          <div className={styles.high_score} />\r\n          <span className={styles.info_value}>{this.props.maxScore}</span>\r\n        </div>\r\n        <div className={styles.score_wrap}>\r\n          <div className={styles.score} />\r\n          <span className={styles.info_value}>{this.props.score}</span>\r\n        </div>\r\n        <div className={styles.time_wrap}>\r\n          <div className={styles.time} />\r\n          <span className={styles.info_value}>{this.props.timeBoost}</span>\r\n        </div>\r\n        <div className={styles.boost_container}>\r\n          <div className={styles.boost} />\r\n          <span\r\n            className={\r\n              this.props.boost ? styles.available : styles.not_available\r\n            }\r\n          />\r\n        </div>\r\n        <div className={styles.apples_container}>\r\n          {!this.props.boost ? (\r\n            this.updateApplesForBoost()\r\n          ) : (\r\n            <div className={styles.space} />\r\n          )}\r\n        </div>\r\n        <div onClick={this.updateSpeed} className={styles.speed_container}>\r\n          <div className={styles.speed} />\r\n          {this.renderSpeedOptions()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactKobra from \"./ReactKobra\";\r\nimport InfoTable from \"./InfoTable\";\r\nimport styles from \"./style.module.css\";\r\n\r\nexport default class Snake extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      score: 0,\r\n      maxScore: 0,\r\n      gameOver: true,\r\n      speed: 900,\r\n      baseSpeed: 900,\r\n      gameStarted: false,\r\n      boost: true,\r\n      boostCount: 3,\r\n      timeBoost: 5\r\n    };\r\n  }\r\n\r\n  setGameOver = bool => {\r\n    this.setState({\r\n      gameOver: bool,\r\n      score: 0\r\n    });\r\n  };\r\n\r\n  setMaxScore = score => {\r\n    this.setState(prevScore =>\r\n      prevScore.maxScore < score\r\n        ? (prevScore.maxScore = score)\r\n        : prevScore.maxScore\r\n    );\r\n  };\r\n\r\n  updateScore = score => {\r\n    this.setState({\r\n      score: score\r\n    });\r\n  };\r\n\r\n  updateBoostStatus = boost => {\r\n    this.setState({\r\n      boost: boost\r\n    });\r\n  };\r\n\r\n  updateSpeed = speed => {\r\n    this.setState({\r\n      speed: speed\r\n    });\r\n  };\r\n\r\n  updateBoostCount = count => {\r\n    this.setState({\r\n      boostCount: count\r\n    });\r\n  };\r\n\r\n  updateStartStatus = start => {\r\n    this.setState({\r\n      gameStarted: start\r\n    });\r\n  };\r\n\r\n  updateBaseSpeed = baseSpeed => {\r\n    this.setState({\r\n      baseSpeed: baseSpeed\r\n    });\r\n  };\r\n\r\n  updateBoostTime = boostTime => {\r\n    this.setState({\r\n      timeBoost: boostTime\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      score,\r\n      maxScore,\r\n      gameOver,\r\n      speed,\r\n      gameStarted,\r\n      boost,\r\n      boostCount,\r\n      baseSpeed,\r\n      timeBoost\r\n    } = this.state;\r\n    return (\r\n      <div id={styles.snake_app_container}>\r\n        <InfoTable\r\n          setGameOver={this.setGameOver}\r\n          updateSpeed={this.updateSpeed}\r\n          updateBaseSpeed={this.updateBaseSpeed}\r\n          boost={boost}\r\n          score={score}\r\n          speed={speed}\r\n          maxScore={maxScore}\r\n          baseSpeed={baseSpeed}\r\n          timeBoost={timeBoost}\r\n          boostCount={boostCount}\r\n          gameStarted={gameStarted}\r\n        />\r\n        <ReactKobra\r\n          setMaxScore={this.setMaxScore}\r\n          setGameOver={this.setGameOver}\r\n          updateSpeed={this.updateSpeed}\r\n          updateScore={this.updateScore}\r\n          updateBoostTime={this.updateBoostTime}\r\n          updateBoostCount={this.updateBoostCount}\r\n          updateStartStatus={this.updateStartStatus}\r\n          updateBoostStatus={this.updateBoostStatus}\r\n          boost={boost}\r\n          speed={speed}\r\n          gameOver={gameOver}\r\n          baseSpeed={baseSpeed}\r\n          timeBoost={timeBoost}\r\n          boostCount={boostCount}\r\n          gameStarted={gameStarted}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// Core\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport Home from \"./Components/Home\";\nimport Snake from \"./Components/Snake\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport styles from './index.module.css'\n\nReactDOM.render(\n    <HashRouter basename={process.env.PUBLIC_URL}>\n        <div id={styles.template}>\n          <Header />\n          <main>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/home\" component={Home} />\n              <Route exact path=\"/game\" component={Snake} />\n            </Switch>\n          </main>\n          <Footer />\n        </div>\n      </HashRouter>\n  ,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\r\n\r\nimport \"./footer.module.css\";\r\n\r\nexport default function Footer () {\r\n  \r\n    return (\r\n      \r\n        <footer>\r\n        <div>&#9400; 2019</div>\r\n        </footer>\r\n    \r\n    );\r\n  \r\n}\r\n"],"sourceRoot":""}
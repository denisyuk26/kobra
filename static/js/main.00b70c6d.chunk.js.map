{"version":3,"sources":["Components/Snake/reactkobra.module.css","Components/Header/header.module.css","Components/Home/home.module.css","Components/Snake/infotable.module.css","Components/Snake/style.module.css","index.module.css","serviceWorker.js","Components/Header/MenuItems.js","Components/Header/index.js","Components/Footer/index.js","Components/Home/index.js","Components/Snake/ReactKobra.js","Components/Snake/InfoTable.js","Components/Snake/index.js","index.js"],"names":["module","exports","snake","grid","start","startAgain","modal","cell","head","tail","apple","app_header","menu_item","greeting","info_container","score_wrap","high_score_wrap","time_wrap","boost_container","apples_container","speed_container","info_value","high_score","score","time","boost","available","not_available","space","speed","speed_name","snake_app_container","template","Boolean","window","location","hostname","match","MenuItems","item","map","index","react_default","a","createElement","key","className","styles","Link","to","concat","Header","Component","Footer","Greeting","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initGreeting","txt","split","greetingTimer","setInterval","setState","prevState","mount","showLetters","shift","componentDidMount","componentWillUnmount","clearInterval","state","_this$state","id","greet","Text_show","ReactKobra","setSpeed","updateSpeed","appleEat","boostKeyIsPressed","initBoostSpeed","event","_this$props","updateBoostStatus","gameOver","boostInterval","timeBoost","updateBoostTime","boostTimeout","setTimeout","boostCount","updateBoostCount","startGame","updateStartStatus","_ref","eat","nextState","objectSpread","row","direction","y","col","x","body","toConsumableArray","Math","floor","random","pop","isSnakeBody","setGameOver","setMaxScore","length","gameTimeOut","setDirection","e","_ref2","_ref3","_ref4","_ref5","baseSpeed","_ref6","getAppleOnField","newApple","isApple","updateScore","isSnakeHead","find","inBody","createGridForSnake","showModalWindow","onClick","Array","keys","_","_this2","document","addEventListener","prevProps","gameStarted","_this3","removeEventListener","clearTimeout","tabIndex","onKeyPress","console","log","InfoTable","target","options","difficulty","label","optionsWithSpeed","name","value","updateBaseSpeed","renderSpeedOptions","disabled","onChange","updateApplesForBoost","arguments","undefined","fill","i","ind","showButtons","maxScore","Snake","bool","prevScore","count","boostTime","InfoTable_InfoTable","ReactKobra_ReactKobra","ReactDOM","render","HashRouter","basename","process","Components_Header","Switch","Route","exact","path","component","Home","Footer_Footer","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.00b70c6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"snake\":\"reactkobra_snake__1J3wN\",\"grid\":\"reactkobra_grid__uP3WP\",\"start\":\"reactkobra_start__2U5mj\",\"startAgain\":\"reactkobra_startAgain__2bJ2d\",\"modal\":\"reactkobra_modal__1e0QJ\",\"cell\":\"reactkobra_cell__1u2kJ\",\"head\":\"reactkobra_head__12NRZ\",\"tail\":\"reactkobra_tail__1k96k\",\"apple\":\"reactkobra_apple__1qYFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_header\":\"header_app_header__2aFTa\",\"menu_item\":\"header_menu_item__3kBGU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"home_greeting__3m25k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info_container\":\"infotable_info_container__2eYkx\",\"score_wrap\":\"infotable_score_wrap__1758e\",\"high_score_wrap\":\"infotable_high_score_wrap__Advbt\",\"time_wrap\":\"infotable_time_wrap__BmZR-\",\"boost_container\":\"infotable_boost_container__3GUTv\",\"apples_container\":\"infotable_apples_container__1mUCj\",\"speed_container\":\"infotable_speed_container__2B5fE\",\"info_value\":\"infotable_info_value__27jyp\",\"high_score\":\"infotable_high_score__3frP1\",\"score\":\"infotable_score__2hKm0\",\"time\":\"infotable_time__2X-E7\",\"boost\":\"infotable_boost__2ttVR\",\"available\":\"infotable_available__15e36\",\"not_available\":\"infotable_not_available__1DI91\",\"apple\":\"infotable_apple__27dkD\",\"space\":\"infotable_space__iXJmw\",\"speed\":\"infotable_speed___JEV7\",\"speed_name\":\"infotable_speed_name__AMK2K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snake_app_container\":\"style_snake_app_container__3Bduf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template\":\"src_template__1u8wO\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./header.module.css\";\r\n\r\n\r\nexport default function MenuItems() {\r\n  const links = [\"home\", \"game\"];\r\n  const item = links.map((item, index) => (\r\n    <li key={index} className={styles.menu_item}>\r\n      <Link to={`${item}`}>{item}</Link>\r\n    </li>\r\n  ));\r\n  return <ul>{item}</ul>;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport MenuItems from \"./MenuItems.js\";\r\nimport styles from \"./header.module.css\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className={styles.app_header}>\r\n          <MenuItems />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nimport './footer.module.css';\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <footer>\r\n        &#9400; 2019\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./home.module.css\";\r\n\r\nexport default class Greeting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showLetters: \"\",\r\n      mount: false\r\n    };\r\n  }\r\n\r\n  initGreeting = () => {\r\n    let txt = `⚛️Hello Visitor!⚛️ Greet to see You!✌️✌️✌️`.split(\"\");\r\n    this.greetingTimer = setInterval(() => {\r\n      if (!txt[0]) return false;\r\n      this.setState(prevState => {\r\n        prevState.mount = true;\r\n        return (prevState.showLetters += txt.shift());\r\n      });\r\n    }, 50);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.initGreeting();\r\n  };\r\n  componentWillUnmount = () => {\r\n    clearInterval(this.greetingTimer);\r\n  };\r\n\r\n  render() {\r\n    const { mount, showLetters } = this.state;\r\n\r\n    return (\r\n      <div id={styles.greet}>\r\n        <div className={styles.greeting}>\r\n          {mount ? <p id={styles.Text_show}>{showLetters}</p> : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport styles from \"./reactkobra.module.css\";\r\n\r\nexport default class ReactKobra extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const grid = [...Array(19).keys()].map((_, row) => {\r\n      return [...Array(19)].map((_, col) => {\r\n        return {\r\n          row: row,\r\n          col: col\r\n        };\r\n      });\r\n    });\r\n    this.state = {\r\n      grid,\r\n      apple: {\r\n        row: Math.floor(Math.random() * 19),\r\n        col: Math.floor(Math.random() * 19)\r\n      },\r\n      snake: {\r\n        head: {\r\n          row: 9,\r\n          col: 9\r\n        },\r\n        direction: {\r\n          x: 1,\r\n          y: 0\r\n        },\r\n        body: []\r\n      },\r\n      startAgain: false,\r\n      boostKeyIsPressed: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", e => {\r\n      this.setDirection(e);\r\n      this.initBoostSpeed(e);\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.gameStarted === !this.props.gameStarted) {\r\n      this.startGame();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", e => {\r\n      this.setDirection(e);\r\n      this.initBoostSpeed(e);\r\n    });\r\n\r\n    clearInterval(this.boostInterval);\r\n    clearTimeout(this.gameTimeOut, this.boostTimeout);\r\n  }\r\n\r\n  /* methods for settings (\r\n\r\n  setSpeed()\r\n   * if snake eat apple, decrease this.props.speed by 20 every time,\r\n   * the smallest speed is 30,\r\n   * if in boost mode snake eat apple,  speed don't change. It always equal to the value    this.props.speed after pressed the 'Space' key\r\n   * return num for setInterval\r\n  initBoostSpeed()\r\n    * if \"Space\" key pressed and the props boost is 1, divided props.speed by 2,\r\n    * after 5000 ms speed change on speed before activated boost\r\n  updateBoostStatus()\r\n    * update props boostCount every time when snake eat apple\r\n    * if props boostCount equal 0, refresh boostCount to default value (3)\r\n  startGame()\r\n    * if props gameOver true do nothing\r\n    * else we have 2 callback in setState,\r\n     ** 1st callback generate new state for snake head, snake body and apple and if snake don't eat apple we delete last element of snake body array, else return new state\r\n     ** 2nd callback check if game is over  or if snake eat self update props for generate gameOver, else run setInterval with methods updateBoostStatus() startGame(), which update every setSpeed()\r\n   setDirection()\r\n    * set state snake.direction depended on key is pressed\r\n    * if direction x or y is 1 and user try to change it to -1 return false\r\n   gameOver()\r\n    * check if snake head coordinates less or bigger than coordinates of col/row grid update props gameOver, start, and check send score for check is it bigger than previous\r\n   startAgain()\r\n    * change setting to default and start game again\r\n  */\r\n  \r\n  setSpeed = () => {\r\n    if (this.props.speed < 30) {\r\n      this.props.updateSpeed(30);\r\n    }\r\n    if (this.appleEat()) {\r\n      this.props.updateSpeed(this.props.speed - 20);\r\n      if (this.appleEat() && this.state.boostKeyIsPressed) {\r\n        this.props.updateSpeed(this.props.speed);\r\n      }\r\n    }\r\n    return this.props.speed;\r\n  };\r\n\r\n  initBoostSpeed = event => {\r\n    const { boost, updateBoostStatus } = this.props;\r\n    if (event.key === \" \" && boost && !this.props.gameOver) {\r\n      updateBoostStatus(false);\r\n      const speed = this.props.speed;\r\n      this.props.updateSpeed(this.props.speed / 2);\r\n      this.setState({ boostKeyIsPressed: true });\r\n      this.boostInterval = setInterval(() => {\r\n        let time = this.props.timeBoost;\r\n        if (!this.props.gameOver) this.props.updateBoostTime(time - 1);\r\n      }, 1000);\r\n      this.boostTimeout = setTimeout(() => {\r\n        this.props.updateSpeed(speed);\r\n        this.setState({\r\n          boostKeyIsPressed: false\r\n        });\r\n        clearInterval(this.boostInterval);\r\n      }, 5000);\r\n    }\r\n  };\r\n  updateBoostStatus = () => {\r\n    if (this.appleEat() && !this.props.boost && !this.state.boostKeyIsPressed) {\r\n      this.props.updateBoostCount(this.props.boostCount - 1);\r\n      return;\r\n    }\r\n    if (this.props.boostCount === 0) {\r\n      this.props.updateBoostCount(3);\r\n      this.props.updateBoostTime(5);\r\n      return this.props.updateBoostStatus(true);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  startGame = () => {\r\n    if (this.props.gameOver) return;\r\n    this.props.updateStartStatus(true);\r\n    this.setState(\r\n      ({ snake, apple }) => {\r\n        const eat = this.appleEat();\r\n        const nextState = {\r\n          snake: {\r\n            ...snake,\r\n            head: {\r\n              row: snake.head.row + snake.direction.y,\r\n              col: snake.head.col + snake.direction.x\r\n            },\r\n            body: [snake.head, ...snake.body]\r\n          },\r\n          apple: this.appleEat()\r\n            ? {\r\n                row: Math.floor(Math.random() * 19),\r\n                col: Math.floor(Math.random() * 19)\r\n              }\r\n            : apple\r\n        };\r\n        if (!eat) nextState.snake.body.pop();\r\n        return nextState;\r\n      },\r\n      () => {\r\n        const { snake } = this.state;\r\n        if (this.gameOver() || this.isSnakeBody(snake.head)) {\r\n          this.props.updateStartStatus(false);\r\n          this.props.setGameOver(true);\r\n          this.props.setMaxScore(snake.body.length);\r\n          return;\r\n        }\r\n        this.gameTimeOut = setTimeout(() => {\r\n          this.updateBoostStatus();\r\n          this.startGame();\r\n        }, this.setSpeed());\r\n      }\r\n    );\r\n  };\r\n\r\n  setDirection = e => {\r\n    const { snake } = this.state;\r\n    if (e.key === \"ArrowUp\") {\r\n      if (snake.direction.y === 1) return;\r\n      this.setState(({ snake }) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: 0,\r\n            y: -1\r\n          }\r\n        }\r\n      }));\r\n    } else if (e.key === \"ArrowRight\") {\r\n      if (snake.direction.x === -1) return;\r\n      this.setState(({ snake }) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: 1,\r\n            y: 0\r\n          }\r\n        }\r\n      }));\r\n    } else if (e.key === \"ArrowDown\") {\r\n      if (snake.direction.y === -1) return;\r\n      this.setState(({ snake }) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: 0,\r\n            y: 1\r\n          }\r\n        }\r\n      }));\r\n    } else if (e.key === \"ArrowLeft\") {\r\n      if (snake.direction.x === 1) return;\r\n      this.setState(({ snake }) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: -1,\r\n            y: 0\r\n          }\r\n        }\r\n      }));\r\n    }\r\n  };\r\n\r\n  gameOver = () => {\r\n    const { snake } = this.state;\r\n    if (\r\n      snake.head.col < 0 ||\r\n      snake.head.row < 0 ||\r\n      snake.head.col > 18 ||\r\n      snake.head.row > 18\r\n    ) {\r\n      this.props.setGameOver(true);\r\n      this.props.updateStartStatus(false);\r\n      this.props.setMaxScore(snake.body.length);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  startAgain = e => {\r\n    this.props.updateSpeed(this.props.baseSpeed);\r\n    this.props.updateBoostCount(3);\r\n    this.props.updateBoostStatus(true);\r\n    this.props.setGameOver(false);\r\n    this.props.updateStartStatus(true);\r\n    this.props.updateBoostTime(5);\r\n    this.setState(({ snake, startAgain }) => {\r\n      return {\r\n        startAgain: true,\r\n        snake: {\r\n          head: {\r\n            col: 9,\r\n            row: 9\r\n          },\r\n          body: [],\r\n          direction: {\r\n            x: 1,\r\n            y: 0\r\n          }\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  /* methods for apple (\r\n  getAppleOnField() generate random apple on field,\r\n  isApple() check apple.row and apple.col with grid coordinates,\r\n  appleEat() check apple.row and apple.col with snake.head coordinates)\r\n  */\r\n\r\n  getAppleOnField = () => {\r\n    const { snake } = this.state;\r\n    const newApple = {\r\n      row: Math.floor(Math.random() * 19),\r\n      col: Math.floor(Math.random() * 19)\r\n    };\r\n    if (\r\n      this.isSnakeBody(this.state.apple) ||\r\n      (snake.head.row === this.state.apple.row &&\r\n        snake.head.col === this.state.apple.col)\r\n    ) {\r\n      return this.getAppleOnField();\r\n    }\r\n    return this.setState({\r\n      apple: newApple\r\n    });\r\n  };\r\n\r\n  isApple = cell => {\r\n    const { apple } = this.state;\r\n    return cell.row === apple.row && cell.col === apple.col ? styles.apple : \"\";\r\n  };\r\n\r\n  appleEat = () => {\r\n    const { apple, snake } = this.state;\r\n    this.props.updateScore(snake.body.length);\r\n    return apple.row === snake.head.row && apple.col === snake.head.col;\r\n  };\r\n\r\n  /* methods for snake head and snake body (\r\n  isSnakeHead() check snake.head.row and snake.head.col with grid coordinates,\r\n  isSnakeBody() tail is array with obj ({col: value, row: value}) I check if coordinates of snake.body equal with grid coordinates return true ,\r\n  */\r\n\r\n  isSnakeHead = cell => {\r\n    const { snake } = this.state;\r\n    return cell.row === snake.head.row && cell.col === snake.head.col\r\n      ? [styles.snake, styles.head]\r\n      : \"\";\r\n  };\r\n\r\n  isSnakeBody = cell => {\r\n    const { snake } = this.state;\r\n    return snake.body.find(\r\n      inBody => inBody.row === cell.row && inBody.col === cell.col\r\n    );\r\n  };\r\n\r\n  createGridForSnake = () => {\r\n    const { grid } = this.state;\r\n    return grid.map(row =>\r\n      row.map(cell => (\r\n        <div\r\n          key={`${cell.row} ${cell.col}`}\r\n          className={`${styles.cell} ${\r\n            this.isSnakeHead(cell)\r\n              ? styles.head\r\n              : this.isApple(cell)\r\n              ? styles.apple\r\n              : this.isSnakeBody(cell)\r\n              ? styles.tail\r\n              : \"\"\r\n          }`}\r\n        />\r\n      ))\r\n    );\r\n  };\r\n\r\n  showModalWindow = () => {\r\n    const { startAgain } = this.state;\r\n    return (\r\n      <div className={styles.modal}>\r\n        <button onClick={this.startAgain} id={styles.start}>\r\n          {startAgain ? \"Start Again\" : \"Start game\"}\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div id={styles.snake} tabIndex=\"0\" onKeyPress={this.setDirection}>\r\n        <section id={styles.grid}>{this.createGridForSnake()}</section>\r\n        <div>{this.props.gameOver ? this.showModalWindow() : null}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport styles from \"./infotable.module.css\";\r\nconsole.log(styles);\r\nexport default class InfoTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      apple: [],\r\n      optionsWithSpeed: [\r\n        { name: \"easy\", speed: 900 },\r\n        { name: \"medium\", speed: 600 },\r\n        { name: \"hard\", speed: 300 }\r\n      ],\r\n      difficulty: \"easy\"\r\n    };\r\n  }\r\n\r\n  updateSpeed = e => {\r\n    console.log(e.target.options);\r\n    if (!this.props.gameStarted) {\r\n      this.setState({ difficulty: e.target.label });\r\n      this.state.optionsWithSpeed.map(item => {\r\n        if (item.name === e.target.value) {\r\n          this.props.updateBaseSpeed(item.speed);\r\n        }\r\n        return item;\r\n      });\r\n    }\r\n  };\r\n\r\n  renderSpeedOptions = () => {\r\n    return (\r\n      <select\r\n        disabled={this.props.gameStarted}\r\n        onChange={this.updateSpeed}\r\n        value={this.state.difficulty}\r\n        className={styles.speed_name}\r\n      >\r\n        {this.state.optionsWithSpeed.map(item => {\r\n          return (\r\n            <option key={item.speed} label={item.name} value={item.name} />\r\n          );\r\n        })}\r\n        ;\r\n      </select>\r\n    );\r\n  };\r\n\r\n  updateApplesForBoost = (apple = []) => {\r\n    if (apple.length < this.props.boostCount) {\r\n      apple.length = this.props.boostCount;\r\n      apple.fill(styles.apple);\r\n    }\r\n    return apple.map((i, ind) => <div className={styles.apple} key={ind} />);\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.boostCount < this.props.boostCount) {\r\n      this.updateApplesForBoost();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id={styles.showButtons} className={styles.info_container}>\r\n        <div className={styles.high_score_wrap}>\r\n          <div className={styles.high_score} />\r\n          <span className={styles.info_value}>{this.props.maxScore}</span>\r\n        </div>\r\n        <div className={styles.score_wrap}>\r\n          <div className={styles.score} />\r\n          <span className={styles.info_value}>{this.props.score}</span>\r\n        </div>\r\n        <div className={styles.time_wrap}>\r\n          <div className={styles.time} />\r\n          <span className={styles.info_value}>{this.props.timeBoost}</span>\r\n        </div>\r\n        <div className={styles.boost_container}>\r\n          <div className={styles.boost} />\r\n          <span\r\n            className={\r\n              this.props.boost ? styles.available : styles.not_available\r\n            }\r\n          />\r\n        </div>\r\n        <div className={styles.apples_container}>\r\n          {!this.props.boost ? (\r\n            this.updateApplesForBoost()\r\n          ) : (\r\n            <div className={styles.space} />\r\n          )}\r\n        </div>\r\n        <div \r\n        onClick={this.updateSpeed} \r\n        className={styles.speed_container}\r\n        >\r\n          <div className={styles.speed} />\r\n          {this.renderSpeedOptions()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactKobra from \"./ReactKobra\";\r\nimport InfoTable from \"./InfoTable\";\r\nimport styles from \"./style.module.css\";\r\n\r\nexport default class Snake extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      score: 0,\r\n      maxScore: 0,\r\n      gameOver: true,\r\n      speed: 900,\r\n      baseSpeed: 900,\r\n      gameStarted: false,\r\n      boost: true,\r\n      boostCount: 3,\r\n      timeBoost: 5\r\n    };\r\n  }\r\n\r\n  setGameOver = bool => {\r\n    this.setState({\r\n      gameOver: bool,\r\n      score: 0\r\n    });\r\n  };\r\n\r\n  setMaxScore = score => {\r\n    this.setState(prevScore =>\r\n      prevScore.maxScore < score\r\n        ? (prevScore.maxScore = score)\r\n        : prevScore.maxScore\r\n    );\r\n  };\r\n\r\n  updateScore = score => {\r\n    this.setState({\r\n      score: score\r\n    });\r\n  };\r\n\r\n  updateBoostStatus = boost => {\r\n    this.setState({\r\n      boost: boost\r\n    });\r\n  };\r\n\r\n  updateSpeed = speed => {\r\n    this.setState({\r\n      speed: speed\r\n    });\r\n  };\r\n\r\n  updateBoostCount = count => {\r\n    this.setState({\r\n      boostCount: count\r\n    });\r\n  };\r\n\r\n  updateStartStatus = start => {\r\n    this.setState({\r\n      gameStarted: start\r\n    });\r\n  };\r\n\r\n  updateBaseSpeed = baseSpeed => {\r\n    this.setState({\r\n      baseSpeed: baseSpeed\r\n    });\r\n  };\r\n\r\n  updateBoostTime = boostTime => {\r\n    this.setState({\r\n      timeBoost: boostTime\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      score,\r\n      maxScore,\r\n      gameOver,\r\n      speed,\r\n      gameStarted,\r\n      boost,\r\n      boostCount,\r\n      baseSpeed,\r\n      timeBoost\r\n    } = this.state;\r\n    return (\r\n      <div id={styles.snake_app_container}>\r\n        <InfoTable\r\n          setGameOver={this.setGameOver}\r\n          updateSpeed={this.updateSpeed}\r\n          updateBaseSpeed={this.updateBaseSpeed}\r\n          boost={boost}\r\n          score={score}\r\n          speed={speed}\r\n          maxScore={maxScore}\r\n          baseSpeed={baseSpeed}\r\n          timeBoost={timeBoost}\r\n          boostCount={boostCount}\r\n          gameStarted={gameStarted}\r\n        />\r\n        <ReactKobra\r\n          setMaxScore={this.setMaxScore}\r\n          setGameOver={this.setGameOver}\r\n          updateSpeed={this.updateSpeed}\r\n          updateScore={this.updateScore}\r\n          updateBoostTime={this.updateBoostTime}\r\n          updateBoostCount={this.updateBoostCount}\r\n          updateStartStatus={this.updateStartStatus}\r\n          updateBoostStatus={this.updateBoostStatus}\r\n          boost={boost}\r\n          speed={speed}\r\n          gameOver={gameOver}\r\n          baseSpeed={baseSpeed}\r\n          timeBoost={timeBoost}\r\n          boostCount={boostCount}\r\n          gameStarted={gameStarted}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// Core\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport Home from \"./Components/Home\";\nimport Snake from \"./Components/Snake\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport styles from './index.module.css'\n\nReactDOM.render(\n    <HashRouter basename={process.env.PUBLIC_URL}>\n        <div id={styles.template}>\n          <Header />\n          <main>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/home\" component={Home} />\n              <Route exact path=\"/game\" component={Snake} />\n            </Switch>\n          </main>\n          <Footer />\n        </div>\n      </HashRouter>\n  ,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
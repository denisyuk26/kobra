{"version":3,"sources":["serviceWorker.js","Components/Header/MenuItems.js","Components/Header/index.js","Components/Home/Greeting.js","Components/Home/ShortInfo.js","Components/Home/index.js","Components/SnakeApp/ReactKobra.js","Components/SnakeApp/InfoTable.js","Components/SnakeApp/index.js","Components/Router/index.jsx","index.js"],"names":["Boolean","window","location","hostname","match","arr","i","MenuItems","item","map","react_default","a","createElement","key","className","Link","to","concat","process","Header","Component","Greeting","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","greeting","txt","split","interval","setInterval","clearInterval","setState","prevState","showLetters","shift","replace","componentWillUnmount","state","id","array","slice","Home","Greeting_Greeting","SnakeGame","componentDidMount","document","addEventListener","e","setDirection","componentDidUpdate","prevProps","snapshot","start","gameStart","gameOver","playing","_ref","snake","apple","eat","appleEat","nextState","objectSpread","head","row","direction","y","col","x","body","toConsumableArray","Math","floor","random","pop","_this$state","isTail","setTimeout","length","speed","getAppleOnField","newApple","maxScore","_this$state2","score","keyCode","_ref2","_ref3","_ref4","_ref5","isSnake","cell","isApple","find","inBody","startAgain","_ref6","grid","cols","push","_this2","_this$state3","tabIndex","onKeyPress","onClick","InfoTable","getElementById","showButtons","target","dataset","console","log","showButon","changeSpeed","buttonsMode","name","difficulty","data-id","toUpperCase","Snake","isGameOver","bool","isMaxScore","prevScore","updateScore","updatePlaying","InfoTable_InfoTable","ReactKobra_SnakeGame","RouterGo","BrowserRouter","basename","Components_Header","Switch","Route","path","component","ReactDOM","render","Router_RouterGo","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57575d62.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const arr = ['Home', 'Game'];\r\nlet i = 1;\r\nexport default function MenuItems () {\r\n    const item = arr.map(item=>\r\n      <li key={i++} className='menu-item'>\r\n        <Link to={`${process.env.PUBLIC_URL + '/'}${item}`}>{item}</Link>\r\n      </li>\r\n    );\r\n      return (<ul>{item}</ul>)\r\n}\r\n","import React, { Component } from 'react';\r\nimport MenuItems from './MenuItems.js';\r\n// import Snake from '../SnakeApp'\r\n\r\nimport '../../App.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"App-header\">\r\n            <MenuItems />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nlet pos = 0;\r\nexport default class Greeting extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      showLetters: '',\r\n    }\r\n    // this.greet = this.greeting.bind(this)\r\n    // this.moveDown = this.moveDown.bind(this)\r\n  }\r\n\r\n  greeting = () =>{\r\n    let br = 1;\r\n    let atom = 2;\r\n    let tab = 3;\r\n    let txt = `${atom}Hello Visitor!${atom} Greet to see You!✌️✌️✌️`.split(\"\");\r\n    let interval = setInterval(() => {\r\n      if(!txt[0]) return clearInterval(interval)\r\n       this.setState((prevState)=> {\r\n         return prevState.showLetters += txt.shift().replace(/[2]/gi, '⚛️')\r\n      })\r\n    }, 50);\r\n\r\n    return ;\r\n  }\r\n\r\n  render(){\r\n      return (\r\n        <div id='greet'>\r\n          <div className = \"greeting text\" >\r\n            <p id=\"Text-show\">{this.state.showLetters}</p>\r\n          </div>\r\n        </div>\r\n      )\r\n  }\r\n  componentDidMount(){\r\n    this.greeting()\r\n    // window.addEventListener('scroll', this.moveDown);\r\n  }\r\n  componentWillUnmount = ()=> {\r\n    clearInterval(this.greeting())\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport {arr} from \"../Header/MenuItems.js\"\r\nlet array = arr.slice();\r\nexport default class ShoInfo extends Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.shortInfo = {\r\n      title: [[1,'About me'], [2,'Contacts']],\r\n      text: [[1,`Hello my name is Sergey Denisyuk , I\\'m front-end developer. I started to study the React Library, and this site is representive some of my skills. If u want to know more info, follow link with`],[2,`If I have interested of you  follow link with`]]\r\n    }\r\n\r\n  }\r\n  list = ()=> {\r\n\r\n    array.splice(0,1)\r\n    console.log( array)\r\n    let item = array.map((i, id = 0)=>{\r\n      if(this.shortInfo.title[id][0] !== id+1) {\r\n        return false\r\n      }\r\n      return (<li className=\"short-item\" key={id+1}>\r\n          <h2>{this.shortInfo.title[id][1]}</h2>\r\n          <p>{this.shortInfo.text[id][1]}  <a href={i}>details</a>.</p>\r\n      </li>)\r\n    })\r\n    return item\r\n  }\r\n  render(){\r\n\r\n    return (\r\n\r\n        <div className='Info-wrap' id='short-info'>\r\n            <ul>{this.list()}</ul>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport Greeting from './Greeting'\r\nimport ShortInfo from './ShortInfo'\r\n\r\nexport default class Home extends Component {\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n  render(){\r\n      return (\r\n        <div>\r\n        <Greeting id='greeting'></Greeting>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport './style.css';\r\nexport default class SnakeGame extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    const grid = [];\r\n    for(let row = 0; row < 19; row++){\r\n      let cols = [];\r\n      for(let col = 0; col < 19; col++){\r\n         cols.push({ row, col })\r\n      }\r\n      grid.push(cols)\r\n    }\r\n    this.state = {\r\n\r\n      grid,\r\n      playing: false,\r\n      apple: {\r\n        row: Math.floor(Math.random() * 19),\r\n        col: Math.floor(Math.random() * 19),\r\n      },\r\n      snake: {\r\n        head: {\r\n          row: 9,\r\n          col: 9\r\n        },\r\n        direction: {\r\n          x: 1,\r\n          y: 0,\r\n        },\r\n        body: [],\r\n      },\r\n      score: 0,\r\n    }\r\n  }\r\n  componentDidMount = () => {\r\n    document.addEventListener('keydown', (e)=> {\r\n      this.setDirection(e)\r\n    });\r\n  }\r\n  componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n    if(prevProps.start === !this.props.start){\r\n       this.gameStart();\r\n    }\r\n  }\r\n  gameStart = () => {\r\n    if(this.state.gameOver) return;\r\n    this.props.playing(true)\r\n    this.setState(({snake, apple, playing})=> {\r\n      const eat = this.appleEat();\r\n      const nextState = {\r\n        playing:true,\r\n        snake: {\r\n          ...snake,\r\n          head: {\r\n            row: snake.head.row + snake.direction.y,\r\n            col: snake.head.col + snake.direction.x,\r\n          },\r\n          body: [snake.head, ...snake.body]\r\n        },\r\n        apple: eat ? {\r\n          row: Math.floor(Math.random() * 19),\r\n          col: Math.floor(Math.random() * 19),\r\n        } : apple\r\n      }\r\n      if(!eat) nextState.snake.body.pop();\r\n      return nextState\r\n    }, () => {\r\n      const {snake, playing} = this.state;\r\n      if(this.gameOver() || this.isTail(snake.head)){\r\n        this.props.playing(false)\r\n        this.setState({\r\n          gameOver: true,\r\n          playing:false,\r\n\r\n        })\r\n\r\n        return;\r\n      }\r\n      setTimeout(()=>{\r\n        this.gameStart();\r\n      }, this.state.snake.body.length ? (this.props.speed / (this.state.snake.body.length + 1) ) + 100 : this.props.speed);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  getAppleOnField = () => {\r\n    const {snake} = this.state;\r\n    const newApple = {\r\n      row: Math.floor(Math.random() * 19),\r\n      col: Math.floor(Math.random() * 19),\r\n    };\r\n    if(this.isTail(newApple) || (snake.head.row === newApple.row && snake.head.col === newApple.col)) {\r\n      return this.getAppleOnField();\r\n    }else {\r\n      return newApple\r\n    }\r\n\r\n  }\r\n  gameOver  = () => {\r\n    const {snake} = this.state;\r\n    if (snake.head.col < 0\r\n      ||snake.head.row < 0\r\n      ||snake.head.col > 18\r\n      ||snake.head.row > 18)\r\n      {\r\n      this.props.gameOver(true)\r\n      this.props.maxScore(snake.body.length)\r\n      return true\r\n      }\r\n      return false\r\n\r\n  }\r\n\r\n  appleEat = () => {\r\n    const {apple, snake} = this.state;\r\n    this.props.score(snake.body.length);\r\n    return apple.row === snake.head.row && apple.col === snake.head.col;\r\n  }\r\n  setDirection  = (e) => {\r\n    const {snake} = this.state;\r\n    if(e.keyCode === 40){\r\n      if(snake.direction.y === -1) return;\r\n      this.setState( ({snake}) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: 0,\r\n            y: 1,\r\n          }\r\n        }\r\n      }))\r\n    }\r\n    else if(e.keyCode === 39){\r\n      if(snake.direction.x === -1) return;\r\n      this.setState( ({snake}) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: 1,\r\n            y: 0,\r\n          }\r\n\r\n        }\r\n      }))\r\n    }\r\n    else if(e.keyCode === 38){\r\n      if(snake.direction.y === 1) return;\r\n      this.setState( ({snake}) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: 0,\r\n            y: -1,\r\n          }\r\n        }\r\n      }))\r\n    }\r\n    else if(e.keyCode === 37){\r\n      if(snake.direction.x === 1) return;\r\n      this.setState( ({snake}) => ({\r\n        snake: {\r\n          ...snake,\r\n          direction: {\r\n            x: -1,\r\n            y: 0,\r\n          }\r\n        }\r\n      }))\r\n    }\r\n  }\r\n  isSnake = (cell)=> {\r\n    const {snake} = this.state;\r\n    return cell.row === snake.head.row && cell.col === snake.head.col ? 'snake head' : ''\r\n  }\r\n  isApple = (cell) => {\r\n        const {apple} = this.state;\r\n        return cell.row === apple.row && cell.col === apple.col ? 'apple' : '';\r\n      }\r\n  isTail = (cell)=> {\r\n    const {snake} = this.state;\r\n    return snake.body.find(inBody => inBody.row === cell.row && inBody.col === cell.col)\r\n  }\r\n\r\n  startAgain = (e) => {\r\n    this.setState( ({snake, gameOver}) => {\r\n            return ({\r\n              playing: false,\r\n              gameOver: false,\r\n              snake:{\r\n                head: {\r\n                  col: 9,\r\n                  row: 9\r\n                },\r\n                body: [],\r\n                direction: {\r\n                  x: 1,\r\n                  y: 0,\r\n                }\r\n              }\r\n            }\r\n\r\n          )\r\n        })\r\n        this.props.gameOver(false)\r\n  }\r\n\r\n  render(){\r\n    const {grid, snake, gameOver, playing} = this.state;\r\n    return (\r\n      <div id=\"snake\" tabIndex = \"0\" onKeyPress={this.setDirection}>\r\n        {\r\n           <div id='gridWrap'>\r\n\r\n              <section id='grid'>\r\n                    {\r\n                      this.state.grid.map( row => (\r\n                        row.map( cell => (\r\n                          <div\r\n                            key={`${cell.row} ${cell.col}`}\r\n                            className={`cell ${\r\n                              this.isSnake(cell)\r\n                              ?'head':this.isApple(cell)\r\n                              ? 'apple' : this.isTail(cell)\r\n                              ? 'tail' : ''\r\n                            }`}>\r\n                          </div>\r\n                        ))\r\n                      ))\r\n                    }\r\n\r\n                </section>\r\n                <div >\r\n                  {\r\n                    !playing\r\n                    ? (\r\n                      <div className='modal'>\r\n                        <button onClick={this.startAgain} id='start' >{gameOver ?\"Start Again\" :  'Start game'}</button>\r\n                      </div>\r\n                    )\r\n                    : ''\r\n                  }\r\n                </div>\r\n\r\n            </div>\r\n\r\n        }\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n// gameOver\r\n// ? (\r\n//   <div>\r\n//     <button onClick={this.startAgain} id='startAgain'>Play Again</button>\r\n//   </div>\r\n// )\r\n// :\r\n","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport './style.css';\r\n\r\nexport default class InfoTable extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        buttonsMode:[\r\n          {name:'easy', speed:900},\r\n          {name:'medium', speed: 600},\r\n          {name:'hard', speed:300}\r\n        ],\r\n        showButon: false,\r\n        difficulty: '',\r\n\r\n    }\r\n  }\r\n  componentDidMount = () => {\r\n      document.getElementById('showButtons').addEventListener('mouseover', this.showButtons)\r\n  }\r\n  showButtons = (e) => {\r\n    if(e.target.dataset.id === 'showButon'){\r\n      console.log(this.state.showButon)\r\n      return this.setState({\r\n        showButon: true\r\n      })\r\n    }\r\n\r\n  }\r\n  gameStart= () => {\r\n    this.setState({\r\n      showButon: !this.state.showButon,\r\n    })\r\n    return this.props.gameOver(false)\r\n  }\r\n  changeSpeed = (e) => {\r\n      this.state.buttonsMode.map(item=> {\r\n        if(item.name === e.target.name) {\r\n          return this.props.changeSpeed(item.speed)\r\n        }\r\n      })\r\n   return  this.setState({\r\n      difficulty: e.target.name,\r\n      showButon: !this.state.showButon,\r\n    })\r\n\r\n  }\r\n  render(){\r\n    return (\r\n      <div  id='showButtons' className=\"wraper\">\r\n        <div className='info'>\r\n          <div className=\"scoreBlock\">\r\n            <h3>Score: {this.props.score}</h3>\r\n            <h3>Max score : {this.props.maxScore}</h3>\r\n          </div>\r\n          <div className='speedBlock'>\r\n            <h3   data-id='showButon'>Speed: { this.state.difficulty === '' ? 'Easy' : this.state.difficulty.replace(this.state.difficulty[0], this.state.difficulty[0].toUpperCase())}</h3>\r\n              {\r\n                 !this.state.showButtons\r\n                 ?  <div id='buttons' className='mode'>\r\n                       {\r\n                         this.state.buttonsMode.map(item=>{\r\n                           return (\r\n                             (this.state.showButon && !this.props.start)\r\n                             ?\r\n                             <button\r\n                             key={item.speed}  id={item.name}\r\n                             name={item.name} onClick={this.changeSpeed}\r\n                             className='button_speed'\r\n\r\n                             >\r\n                             {item.name.replace(item.name[0], item.name[0].toUpperCase())}\r\n                             </button>\r\n                             : ''\r\n                           )\r\n                         })\r\n                       }\r\n\r\n                   </div>\r\n                   : ''\r\n              }\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\n  // <button className={`${ this.state.showButon ? 'show' : 'hide'}`} onClick={this.gameStart} id='start'>Start the game</button>\r\n// <button  id='easy' name='easy' onClick={this.changeSpeed}>Easy</button>\r\n// <button  id='medium' name='medium' onClick={this.changeSpeed}>Medium</button>\r\n// <button  id='hard' name='hard' onClick={this.changeSpeed}>Hard</button>\r\n","import React, { Component } from 'react';\r\nimport SnakeGame from './ReactKobra';\r\nimport InfoTable from './InfoTable';\r\nimport '../../App.css';\r\nimport './style.css';\r\n\r\nexport default class Snake extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      score: 0,\r\n      maxScore: 0,\r\n      gameOver: true,\r\n      speed: 900,\r\n      start: false\r\n\r\n    }\r\n  }\r\n  isGameOver = (bool) => {\r\n    return this.setState({\r\n      gameOver: bool,\r\n      score: 0\r\n    })\r\n  }\r\n  isMaxScore = (score) => {\r\n    return this.setState(\r\n      prevScore => prevScore.maxScore < score\r\n                 ? prevScore.maxScore = score\r\n                 : prevScore.maxScore\r\n               )\r\n  }\r\n  updateScore = (score)=> {\r\n      return this.setState({\r\n        score: score\r\n      })\r\n  }\r\n  changeSpeed = (speed)=> {\r\n    return this.setState({\r\n      speed: speed\r\n    })\r\n  }\r\n  updatePlaying = (start) => {\r\n    return this.setState({\r\n      start: start,\r\n    })\r\n  }\r\n  render(){\r\n    const {score, maxScore, gameOver, speed, start} = this.state;\r\n    return (\r\n\r\n      <div id='snakeWrap' className=\"SnakeApp\">\r\n          <InfoTable\r\n            score={score}\r\n            maxScore={maxScore}\r\n            gameOver = {this.isGameOver}\r\n            speed = {speed}\r\n            start = {start}\r\n            changeSpeed = {this.changeSpeed}>\r\n          </InfoTable>\r\n          <SnakeGame\r\n            score={this.updateScore}\r\n            gameOver = {this.isGameOver}\r\n            maxScore={this.isMaxScore}\r\n            start = {gameOver}\r\n            playing = {this.updatePlaying}\r\n            speed = {speed}>\r\n          </SnakeGame>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n//\r\n// {\r\n//   gameOver\r\n//   ? (\r\n//     <div>\r\n//       <h1>Game Over! Score: {snake.body.length + 1}</h1>\r\n//       <button onClick={this.startAgain} id='startAgain'>Play Again</button>\r\n//     </div>\r\n//   )\r\n//   : <div>\r\n//       <div id='buttons'>\r\n//         <button onClick={this.startAgain} id='start'>Start the game</button>\r\n//         <div className='mode'>\r\n//           Change mode\r\n//           <button  id='easy'>Easy</button>\r\n//           <button  id='medium'>Medium</button>\r\n//           <button  id='hard'>Hard</button>\r\n//         </div>\r\n//\r\n//       </div>\r\n//\r\n//       <section id='grid'>\r\n//             {\r\n//               this.state.grid.map( row => (\r\n//                 row.map( cell => (\r\n//                   <div\r\n//                     key={`${cell.row} ${cell.col}`}\r\n//                     className={`cell ${\r\n//                       this.isSnake(cell)\r\n//                       ?'head':this.isApple(cell)\r\n//                       ? 'apple' : this.isTail(cell)\r\n//                       ? 'tail' : ''\r\n//                     }`}>\r\n//                   </div>\r\n//                 ))\r\n//               ))\r\n//             }\r\n//\r\n//         </section>\r\n//\r\n//\r\n//     </div>\r\n// }\r\n\r\n/*\r\n<div id=\"info block\">\r\n    <h3>Mode: {this.state.mode}</h3>\r\n    <h3>Score: <span>{snake.body.length + 1}</span></h3>\r\n\r\n</div>\r\n*/\r\n","import React, { Component } from 'react';\r\nimport MenuItems from '../Header/MenuItems';\r\nimport Header from '../Header';\r\nimport Home from '../Home';\r\nimport Snake from '../SnakeApp'\r\nimport {BrowserRouter, Route, Link, Switch} from 'react-router-dom'\r\nimport createHistory from 'history/createBrowserHistory';\r\n\r\n\r\nexport default class RouterGo extends Component {\r\n  render (){\r\n\r\n    return (\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n\r\n        <div>\r\n          <Header ></Header>\r\n          <main>\r\n            <Switch>\r\n              <Route path='/game' component={Snake}/>\r\n              <Route path='/' component={Home}/>\r\n            </Switch>\r\n\r\n\r\n          </main>\r\n\r\n\r\n        </div>\r\n\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport RouterGo from './Components/Router/'\n// import MenuItems from './Components/Header/MenuItems';\n// import Header from './Components/Header';\n// import Home from './Components/Home';\n//\n// import Snake from './Components/SnakeApp'\n\n\n\n\n\nReactDOM.render(\n  <RouterGo />,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}